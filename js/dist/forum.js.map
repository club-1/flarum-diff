{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@the-turk/flarum-diff/webpack/bootstrap","webpack://@the-turk/flarum-diff/webpack/runtime/compat get default export","webpack://@the-turk/flarum-diff/webpack/runtime/define property getters","webpack://@the-turk/flarum-diff/webpack/runtime/hasOwnProperty shorthand","webpack://@the-turk/flarum-diff/webpack/runtime/make namespace object","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/extend']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/app']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/components/CommentPost']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/components/Page']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/models/Post']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/Model']\"","webpack://@the-turk/flarum-diff/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@the-turk/flarum-diff/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/utils/mixin']\"","webpack://@the-turk/flarum-diff/./src/forum/models/Diff.js","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/components/Dropdown']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/Component']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/components/Button']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/helpers/avatar']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/helpers/username']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@the-turk/flarum-diff/./src/forum/components/DiffButton.js","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@the-turk/flarum-diff/./src/forum/utils/redrawPost.js","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/components/Alert']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@the-turk/flarum-diff/./src/forum/components/DiffModal.js","webpack://@the-turk/flarum-diff/./src/forum/components/DiffList.js","webpack://@the-turk/flarum-diff/./src/forum/states/DiffListState.js","webpack://@the-turk/flarum-diff/./src/forum/components/DiffDropdown.js","webpack://@the-turk/flarum-diff/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/CommentPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Page'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Post'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/mixin'];","import Model from 'flarum/common/Model';\nimport mixin from 'flarum/common/utils/mixin';\n\nexport default class Diff extends mixin(Model, {\n  revision: Model.attribute('revision'),\n  createdAt: Model.attribute('createdAt', Model.transformDate),\n  deletedAt: Model.attribute('deletedAt', Model.transformDate),\n  rollbackedAt: Model.attribute('rollbackedAt', Model.transformDate),\n  actor: Model.hasOne('actor'),\n  deletedUser: Model.hasOne('deletedUser'),\n  rollbackedUser: Model.hasOne('rollbackedUser'),\n  inlineHtml: Model.attribute('inlineHtml'),\n  sideBySideHtml: Model.attribute('sideBySideHtml'),\n  combinedHtml: Model.attribute('combinedHtml'),\n  previewHtml: Model.attribute('previewHtml'),\n  comparisonBetween: Model.attribute('comparisonBetween'),\n}) {}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Dropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/avatar'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/username'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/humanTime'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","import Button from 'flarum/common/components/Button';\nimport avatar from 'flarum/common/helpers/avatar';\nimport icon from 'flarum/common/helpers/icon';\nimport username from 'flarum/common/helpers/username';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport extractText from 'flarum/common/utils/extractText';\n\n/**\n * The `DiffButton` component composes a button\n * for all revisions created in DiffList.\n */\nexport default class DiffButton extends Button {\n  // see the following link to find out why i'm overriding this at all\n  // https://discuss.flarum.org/d/22728-passing-an-object-to-a-custom-button-component\n  view() {\n    const attrs = Object.assign({}, this.attrs);\n\n    delete attrs.item;\n    delete attrs.subButton;\n    delete attrs.postDate;\n\n    attrs.type = 'button';\n\n    return <button {...attrs}>{this.getButtonContent()}</button>;\n  }\n\n  getButtonContent() {\n    const revision = this.attrs.item;\n    let actor = revision.actor();\n\n    let buttonText =\n      revision.revision() == 0\n        ? /* {username} created {ago} */\n          extractText(\n            app.translator.trans('the-turk-diff.forum.createdInfo', {\n              username: username(revision.actor()),\n              ago: humanTime(this.attrs.postDate),\n            })\n          )\n        : /* {username} edited {ago} */\n          extractText(\n            app.translator.trans('the-turk-diff.forum.editedInfo', {\n              username: username(revision.actor()),\n              ago: humanTime(revision.createdAt()),\n            })\n          );\n\n    if (revision.deletedAt()) {\n      if (this.attrs.subButton === false) {\n        /* {username} did something {ago} (deleted) */\n        buttonText = buttonText + ' ' + app.translator.trans('the-turk-diff.forum.deletedText');\n      } else {\n        /* sub button text that appears when you click on caret icon */\n        actor = revision.deletedUser();\n        /* {actor} deleted this content {ago} */\n        buttonText = extractText(\n          app.translator.trans('the-turk-diff.forum.deletedInfo', {\n            username: username(revision.deletedUser()),\n            ago: humanTime(revision.deletedAt()),\n          })\n        );\n      }\n    }\n\n    return [\n      // we also should consider deleted users here\n      actor.username() ? avatar(actor) : '',\n      // does this button have an icon?\n      revision.deletedAt() && this.attrs.subButton === false\n        ? icon('fas fa-caret-down', {\n            className: 'Button-caret',\n          })\n        : '',\n      // button label\n      <span className=\"Button-label\" title={buttonText}>\n        {revision.deletedAt() && this.attrs.subButton === true ? (\n          /* emphasize deleted revision's information */\n          <em>{buttonText}</em>\n        ) : (\n          buttonText\n        )}\n      </span>,\n    ];\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","/**\n * Redraw the post.\n * Workaround for - SubtreeRetainer doesn't allow redrawing post\n * https://discuss.flarum.org/d/22755-mithril-related-issues-on-poststream-items\n *\n * @param {Object} post\n */\nexport default function redrawPost(post) {\n  return post.save({}).then(() => m.redraw());\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Alert'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","import app from 'flarum/common/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport username from 'flarum/common/helpers/username';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport avatar from 'flarum/common/helpers/avatar';\nimport extractText from 'flarum/common/utils/extractText';\nimport redrawPost from '../utils/redrawPost';\nimport Alert from 'flarum/common/components/Alert';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport DiffList from './DiffList';\n\n/**\n * The `DiffModal` component is the main component of this extension.\n * It also contains DiffList components.\n */\nexport default class DiffModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    /**\n     * Whether or not the modal is loading.\n     *\n     * @type {Boolean}\n     */\n    this.loading = false;\n\n    /**\n     * Whether the modal is showing or not.\n     *\n     * @type {Boolean}\n     */\n    this.showing = false;\n\n    /**\n     * We will use this to change modal's content when\n     * user clicks on a revision on the list.\n     *\n     * @type {Number|Null}\n     */\n    this.diffId = null;\n\n    /**\n     * This holds information about which revisions are subjects for comparison.\n     *\n     * @type {Object}\n     */\n    this.comparisonBetween = JSON.parse(this.attrs.listState.selectedItem.comparisonBetween());\n  }\n\n  className() {\n    return 'DiffModal';\n  }\n\n  title() {\n    return [\n      // we also should consider deleted users here\n      this.attrs.listState.selectedItem.actor().username() ? avatar(this.attrs.listState.selectedItem.actor()) : '',\n      this.attrs.listState.selectedItem.revision() != 0\n        ? // x edited y ago\n          app.translator.trans('the-turk-diff.forum.editedInfo', {\n            username: (\n              <a href={app.route.user(this.attrs.listState.selectedItem.actor())} config={m.route}>\n                {username(this.attrs.listState.selectedItem.actor())}\n              </a>\n            ),\n            ago: humanTime(this.attrs.listState.selectedItem.createdAt()),\n          })\n        : // x created y ago\n          app.translator.trans('the-turk-diff.forum.createdInfo', {\n            username: (\n              <a href={app.route.user(this.attrs.listState.selectedItem.actor())} config={m.route}>\n                {username(this.attrs.listState.selectedItem.actor())}\n              </a>\n            ),\n            ago: humanTime(this.attrs.listState.post.createdAt()),\n          }),\n    ];\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    this.config(vnode);\n  }\n\n  onupdate(vnode) {\n    this.config(vnode);\n  }\n\n  config(vnode) {\n    // workaround for missing 'in' class on .ModalManager\n    // after redrawing the DiffList component.\n    // because i'm done with this shit.\n    // https://github.com/flarum/core/pull/2080\n    if (this.showing && !$('.ModalManager').hasClass('in')) $('.ModalManager').addClass('in');\n\n    // we should re-Initialize this component after user\n    // clicks a different revision while modal is open\n    if (this.diffId === this.attrs.listState.selectedItem.id()) return;\n\n    this.showing = true;\n    this.diffId = this.attrs.listState.selectedItem.id();\n\n    this.comparisonBetween = JSON.parse(this.attrs.listState.selectedItem.comparisonBetween());\n\n    if (this.attrs.listState.selectedItem.revision() != 0 && this.comparisonBetween.new.revision != this.comparisonBetween.old.revision) {\n      // we'll use Side By Side renderer as a fallback\n      // if there is no renderer choice\n      return this.setDiffContent(app.session.user.preferences().diffRenderer ? app.session.user.preferences().diffRenderer : 'sideBySide');\n    } else {\n      return this.setDiffContent('preview');\n    }\n  }\n\n  view() {\n    return (\n      <div className={'Modal modal-dialog ' + this.className()}>\n        <div className=\"Modal-content\">\n          <div className=\"Modal-close App-backControl\">\n            {Button.component({\n              icon: 'fas fa-times',\n              onclick: this.hide.bind(this),\n              className: 'Button Button--icon Button--link',\n            })}\n          </div>\n          {\n            // Revision Options Button\n          }\n          {(this.attrs.listState.post.canDeleteEditHistory() &&\n            this.attrs.listState.selectedItem.revision() != this.attrs.listState.post.revisionCount()) ||\n          (this.attrs.listState.post.canRollbackEditHistory() && this.$('.DeletedDiff').length != this.attrs.listState.post.revisionCount()) ? (\n            <Dropdown\n              className=\"diffCotrollerDropdown App-primaryControl\"\n              icon=\"fas fa-ellipsis-v\"\n              buttonClassName=\"Button\"\n              menuClassName=\"Dropdown-menu--right\"\n              label={app.translator.trans('the-turk-diff.forum.optionsButton')}\n            >\n              {\n                // Rollback\n                // there must be a revision to rollback,\n                // as we can't rollback to current post.\n              }\n              {this.attrs.listState.post.canRollbackEditHistory() && this.comparisonBetween.old.diffId\n                ? Button.component(\n                    {\n                      icon: 'fas fa-reply',\n                      onclick: () => {\n                        if (\n                          confirm(\n                            app.translator.trans('the-turk-diff.forum.confirmRollback', {\n                              number: this.attrs.listState.selectedItem.revision(),\n                            })\n                          )\n                        ) {\n                          this.loading = true;\n                          m.redraw();\n\n                          let rollbackTo =\n                            this.attrs.listState.selectedItem.revision() == this.attrs.listState.post.revisionCount()\n                              ? this.comparisonBetween.old.diffId\n                              : this.attrs.listState.selectedItem.id();\n\n                          app\n                            .request({\n                              url: `${app.forum.attribute('apiUrl')}/diff/${rollbackTo}`,\n                              method: 'POST',\n                            })\n                            .then(() => {\n                              redrawPost(this.attrs.listState.post);\n                              app.modal.close();\n\n                              if (app.cache.diffs && app.cache.diffs[this.attrs.listState.post.id()]) {\n                                delete app.cache.diffs[this.attrs.listState.post.id()];\n                              }\n\n                              this.showAlert('success', 'rollback');\n                            })\n                            .catch(() => {\n                              this.loading = false;\n                              m.redraw();\n                              redrawPost(this.attrs.listState.post);\n\n                              this.showAlert('error', 'rollback');\n                            });\n                        }\n                      },\n                    },\n                    this.attrs.listState.selectedItem.revision() == 0\n                      ? /* we're viewing the original content */\n                        app.translator.trans('the-turk-diff.forum.rollbackToOriginalButton')\n                      : this.attrs.listState.selectedItem.revision() == this.attrs.listState.post.revisionCount()\n                      ? this.comparisonBetween.old.revision != 0\n                        ? /* we're comparing this revision with current content. */\n                          app.translator.trans('the-turk-diff.forum.revertChangesButton')\n                        : /* we're comparing this revision with original content */\n                          app.translator.trans('the-turk-diff.forum.rollbackToOriginalButton')\n                      : /* we're comparing this revision with another revision */\n                        app.translator.trans('the-turk-diff.forum.rollbackButton', {\n                          number: this.attrs.listState.selectedItem.revision(),\n                        })\n                  )\n                : ''}\n\n              {\n                // Delete\n                // you can't delete last item on the list\n                // because it's the current post actually.\n              }\n              {this.attrs.listState.post.canDeleteEditHistory() &&\n              this.attrs.listState.selectedItem.revision() != this.attrs.listState.post.revisionCount()\n                ? Button.component(\n                    {\n                      icon: 'far fa-trash-alt',\n                      onclick: () => {\n                        if (confirm(app.translator.trans('the-turk-diff.forum.confirmDelete'))) {\n                          this.loading = true;\n                          m.redraw();\n\n                          this.attrs.listState.selectedItem\n                            .delete()\n                            .then(() => {\n                              app.modal.close();\n\n                              if (app.cache.diffs && app.cache.diffs[this.attrs.listState.post.id()]) {\n                                delete app.cache.diffs[this.attrs.listState.post.id()];\n                              }\n\n                              this.showAlert('success', 'delete');\n                            })\n                            .catch(() => {\n                              this.loading = false;\n                              m.redraw();\n\n                              this.showAlert('error', 'delete');\n                            });\n                        }\n                      },\n                    },\n                    app.translator.trans('the-turk-diff.forum.deleteButton')\n                  )\n                : ''}\n            </Dropdown>\n          ) : (\n            ''\n          )}\n\n          <div className=\"Modal-header\">\n            <h3 className=\"App-titleControl App-titleControl--text\">{this.title()}</h3>\n          </div>\n          {this.content()}\n        </div>\n      </div>\n    );\n  }\n\n  content() {\n    const revisionCount = this.attrs.listState.post.revisionCount();\n\n    /**\n     * `type` is passed to `setDiffContent` and the tooltip.\n     */\n    const diffSwitches = [\n      {\n        type: 'inline',\n        icon: 'fas fa-grip-lines',\n        class: 'inlineView',\n      },\n      {\n        type: 'sideBySide',\n        icon: 'fas fa-columns',\n        class: 'sideBySideView',\n      },\n      {\n        type: 'combined',\n        icon: 'far fa-square',\n        class: 'combinedView',\n      },\n    ];\n\n    return [\n      <div className=\"diff-grid\">\n        {/* Renderer Switcher Container */}\n        <div className=\"diff-grid-item diff-grid-controls\">\n          <div className=\"diffSwitcher\">\n            {this.attrs.listState.selectedItem.revision() != 0 && this.comparisonBetween.new.revision != this.comparisonBetween.old.revision\n              ? diffSwitches.map((switchData) => (\n                  <Tooltip showOnFocus={false} text={app.translator.trans(`the-turk-diff.forum.tooltips.${switchData.type}`)}>\n                    <div className=\"tooltip-wrapper\">\n                      <Button\n                        icon={switchData.icon}\n                        onclick={() => this.setDiffContent(switchData.type)}\n                        className={`Button Button--icon Button--link ${switchData.class}`}\n                      />\n                    </div>\n                  </Tooltip>\n                ))\n              : ''}\n            <Tooltip showOnFocus={false} text={app.translator.trans('the-turk-diff.forum.tooltips.preview')}>\n              <div className=\"tooltip-wrapper\">\n                <Button icon=\"far fa-eye\" onclick={() => this.setDiffContent('preview')} className=\"Button Button--icon Button--link diffPreview\" />\n              </div>\n            </Tooltip>\n          </div>\n        </div>\n\n        {/* Comparison Info Container */}\n        <div className=\"diff-grid-item diff-grid-info\">\n          <div className=\"revisionInfo\">\n            <h4>{app.translator.trans('the-turk-diff.forum.revisions', { revisionCount })}</h4>\n            <p class=\"diffInfoContainer\" />\n          </div>\n        </div>\n\n        {/* Revision List Container */}\n        <div className=\"diff-grid-item diff-grid-revisions\">\n          <DiffList state={this.attrs.listState}></DiffList>\n        </div>\n\n        {/* Diffs Container */}\n        <div className=\"diff-grid-item diff-grid-diff\">\n          <div className=\"diffContents\">\n            {\n              // .previewContainer is hidden by default\n              // we'll do some nasty switches later\n            }\n            <div\n              className={\n                'previewContainer Post-body' + (app.forum.attribute('textFormattingForDiffPreviews') === false ? ' diff-skip-formatting' : '')\n              }\n            >\n              {this.renderHtml(this.attrs.listState.selectedItem.data.attributes.previewHtml)}\n            </div>\n            <div className=\"diffContainer\" />\n          </div>\n        </div>\n        {this.loading ? <LoadingIndicator containerClassName=\"DiffModal-loading\" size=\"large\" /> : ''}\n      </div>,\n    ];\n  }\n\n  /**\n   * Slowly scroll to selected revision.\n   */\n  onready() {\n    const $revisions = this.$('.DiffList-content');\n    let $selectedItem = this.$('li#parentDiff' + this.attrs.listState.selectedItem.id());\n\n    $revisions.animate({\n      scrollTop: $selectedItem.offset().top - $revisions.offset().top + $revisions.scrollTop(),\n    });\n  }\n\n  /**\n   * Show success and error messages for rollback and delete operations.\n   *\n   * @param {string} type\n   * @param {string} key\n   */\n  showAlert(type, key) {\n    const message = {\n      success: 'the-turk-diff.forum.' + key + 'SuccessMessage',\n      error: 'the-turk-diff.forum.' + key + 'ErrorMessage',\n    }[type];\n\n    app.alerts.show(Alert, { type }, app.translator.trans(message));\n  }\n\n  /**\n   * Render the diff views provided by external lib.\n   *\n   * do we need to worry about m.trust() function?\n   * well, Flarum itself doing the same way for rendering\n   * post items as seen on CommentPost.js#L52\n   * also, the diff library itself treat all inputs as plain text:\n   * https://github.com/jfcherng/php-diff/issues/9#issuecomment-526808774\n   * so no need to use additional Sanitizer lib for this operation.\n   *\n   * @param {string} content\n   */\n  renderHtml(content) {\n    return m.trust(content);\n  }\n\n  /**\n   * Insert rendered diff views into their container\n   * and disable active views' buttons.\n   * Disabling buttons is just for indicating\n   * so frontend looks good but the backend sucks.\n   *\n   * @param {string} contentType\n   */\n  setDiffContent(contentType) {\n    let diffContentHtml;\n    const $diffContainer = this.$('.diffContainer');\n    const $previewContainer = this.$('.previewContainer');\n\n    // buttons\n    const $sideBySideButton = this.$('.Button.sideBySideView');\n    const $inlineButton = this.$('.Button.inlineView');\n    const $combinedButton = this.$('.Button.combinedView');\n    const $previewButton = this.$('.Button.diffPreview');\n\n    if (contentType !== 'preview') {\n      if (contentType === 'sideBySide') {\n        diffContentHtml = this.renderHtml(this.attrs.listState.selectedItem.data.attributes.sideBySideHtml);\n        $sideBySideButton.prop('disabled', true);\n        // what a dynasty - LOL\n        $sideBySideButton.parent().siblings().children().prop('disabled', false);\n      } else if (contentType === 'inline') {\n        diffContentHtml = this.renderHtml(this.attrs.listState.selectedItem.data.attributes.inlineHtml);\n        $inlineButton.prop('disabled', true);\n        $inlineButton.parent().siblings().children().prop('disabled', false);\n      } else if (contentType === 'combined') {\n        diffContentHtml = this.renderHtml(this.attrs.listState.selectedItem.data.attributes.combinedHtml);\n        $combinedButton.prop('disabled', true);\n        $combinedButton.parent().siblings().children().prop('disabled', false);\n      }\n    } else {\n      $diffContainer.hide();\n      this.$('.previewContainer').show();\n\n      $previewButton.prop('disabled', true);\n      $previewButton.parent().siblings().children().prop('disabled', false);\n      return this.setInfoContent(true);\n    }\n\n    if (diffContentHtml) {\n      $diffContainer.html(diffContentHtml.children);\n\n      if ($previewContainer.is(':visible')) {\n        $diffContainer.show();\n        $previewContainer.hide();\n      }\n\n      // let's remember their renderer choice\n      app.session.user.savePreferences({\n        diffRenderer: contentType,\n      });\n\n      return this.setInfoContent();\n    }\n\n    return;\n  }\n\n  /**\n   * Set informations about comparisons.\n   *\n   * @param {Boolean} preview\n   */\n  setInfoContent(preview = false) {\n    const $infoContainer = this.$('.diffInfoContainer');\n\n    let infoContentHtml =\n      !preview && this.attrs.listState.selectedItem.revision() != 0 && this.comparisonBetween.new.revision != this.comparisonBetween.old.revision\n        ? extractText(\n            app.translator.trans('the-turk-diff.forum.differences.sentence', {\n              old:\n                this.comparisonBetween.old.revision == -1\n                  ? /* we're viewing differences between current content and {new} */\n                    app.translator.trans('the-turk-diff.forum.differences.currentContent')\n                  : this.comparisonBetween.old.revision == 0\n                  ? /* we're viewing differences between original content and {new} */\n                    app.translator.trans('the-turk-diff.forum.differences.originalContent')\n                  : /* we're viewing differences between revision X and {new} */\n                    app.translator.trans('the-turk-diff.forum.differences.revisionWithNumber', {\n                      number: this.comparisonBetween.old.revision,\n                    }),\n              new:\n                this.comparisonBetween.new.revision == 0\n                  ? /* we're viewing differences between {old} and original content */\n                    app.translator.trans('the-turk-diff.forum.differences.originalContent')\n                  : this.comparisonBetween.new.revision == this.attrs.listState.post.revisionCount()\n                  ? /* we're viewing differences between {old} and current content */\n                    app.translator.trans('the-turk-diff.forum.differences.currentContent')\n                  : /* we're viewing differences between {old} and revision X */\n                    app.translator.trans('the-turk-diff.forum.differences.revisionWithNumber', {\n                      number: this.comparisonBetween.new.revision,\n                    }),\n            })\n          )\n        : extractText(\n            app.translator.trans('the-turk-diff.forum.previewMode.sentence', {\n              content:\n                this.comparisonBetween.new.revision == 0\n                  ? /* we're previewing original content */\n                    app.translator.trans('the-turk-diff.forum.previewMode.originalContent')\n                  : this.comparisonBetween.new.revision == this.attrs.listState.post.revisionCount()\n                  ? /* we're previewing current content */\n                    app.translator.trans('the-turk-diff.forum.previewMode.currentContent')\n                  : /* we're previewing revision X */\n                    app.translator.trans('the-turk-diff.forum.previewMode.revisionWithNumber', {\n                      number: this.comparisonBetween.new.revision,\n                    }),\n            })\n          );\n\n    return $infoContainer.html(infoContentHtml);\n  }\n}\n","import app from 'flarum/common/app';\nimport Component from 'flarum/common/Component';\nimport DiffButton from './DiffButton';\nimport DiffModal from './DiffModal';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\n/**\n * The `DiffList` component displays a list of the post's revisions.\n * It's been using on both DiffDropdown & DiffModal components.\n * It also contains DiffButton components.\n */\nexport default class DiffList extends Component {\n  view() {\n    const state = this.attrs.state;\n    const pages = app.cache.diffs[state.post.id()] || [];\n\n    return (\n      <div className=\"DiffList-container\">\n        <div className=\"DiffList-content\">\n          <ul>\n            {pages.length\n              ? pages.map((diffs) => {\n                  return diffs.map((item) => {\n                    const tooltipClass = 'diffListTooltip';\n\n                    let diffButton = (\n                      <Tooltip\n                        showOnFocus={false}\n                        position=\"left\"\n                        text={\n                          item.revision() == state.post.revisionCount()\n                            ? // we're hovering on latest revision's button\n                              app.translator.trans('the-turk-diff.forum.tooltips.mostRecent')\n                            : item.revision() == 0\n                            ? // we're hovering on zeroth revision's button\n                              app.translator.trans('the-turk-diff.forum.tooltips.originalContent')\n                            : // we're hovering on other revision's button\n                              app.translator.trans('the-turk-diff.forum.tooltips.revisionWithNumber', {\n                                number: item.revision(),\n                              })\n                        }\n                      >\n                        {DiffButton.component({\n                          'data-container': 'body',\n                          postDate: state.post.createdAt(),\n                          subButton: false,\n                          item,\n                          onclick: () => {\n                            if (!item.deletedAt()) {\n                              // fix tooltips are not disappearing onclick\n                              $('.' + tooltipClass).remove();\n\n                              state.selectedItem = item;\n                              app.modal.show(DiffModal, { listState: state });\n\n                              if (state.forModal) {\n                                // .DiffList-content container of clicked revision\n                                const $listContainer = this.$('li#parentDiff' + item.id());\n\n                                // disable clicked revision, enable others\n                                $listContainer.find('button').prop('disabled', true);\n                                $listContainer.siblings().find('button').prop('disabled', false);\n                                // add 'active' class to clicked revision, remove it from others\n                                $listContainer.siblings().removeClass('active');\n                                $listContainer.addClass('active');\n                              }\n                            } else {\n                              // if revision is deleted, we'll toggle the info\n                              // like GitHub does.\n                              this.toggleSubDiff(item.id());\n                            }\n                          },\n                          oncreate: (vnode) => {\n                            $(vnode.dom)\n                              // this is a workaround for adding custom\n                              // classes into bootstrap tooltips\n                              // https://stackoverflow.com/a/29879041/12866913\n                              .data('bs.tooltip')\n                              .tip()\n                              .addClass(item.deletedAt() ? tooltipClass + ' deletedDiffTooltip' : tooltipClass);\n                          },\n                        })}\n                      </Tooltip>\n                    );\n\n                    // returns the template for revision list items\n                    return [\n                      <li className={'Diff ParentDiff' + (item.deletedAt() ? ' DeletedDiff' : '')} id={'parentDiff' + item.id()}>\n                        {diffButton}\n                      </li>,\n                      item.deletedAt() ? (\n                        <li className=\"Diff SubDiff\" id={'subDiff' + item.id()}>\n                          <DiffButton postDate={state.post.createdAt()} subButton item={item} />\n                        </li>\n                      ) : (\n                        ''\n                      ),\n                    ];\n                  });\n                })\n              : ''}\n            {state.loading ? (\n              LoadingIndicator.component({\n                className: 'LoadingIndicator--block',\n              })\n            ) : !pages.length ? (\n              <div className=\"DiffList-empty\">{app.translator.trans('the-turk-diff.forum.emptyText')}</div>\n            ) : (\n              ''\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n    const state = this.attrs.state;\n\n    if (state.forModal && state.selectedItem) {\n      let $selectedItem = this.$('li#parentDiff' + state.selectedItem);\n      $selectedItem.find('button').prop('disabled', true);\n      $selectedItem.addClass('active');\n    }\n\n    const $revisions = this.$('.DiffList-content');\n    this.$scrollParent = $revisions.css('overflow') === 'auto' ? $revisions : $(window);\n\n    // Lazy-loading implementation for the revision list\n    // simply checks if we're bottom of the list\n    // and if there are more results to show\n    this.scrollHandler = () => {\n      const scrollTop = this.$scrollParent.scrollTop();\n      const viewportHeight = this.$scrollParent.height();\n      const contentTop = this.$scrollParent === $revisions ? 0 : $revisions.offset().top;\n      const contentHeight = $revisions[0].scrollHeight;\n\n      if (state.moreResults && !state.loading && scrollTop + viewportHeight >= contentTop + contentHeight) {\n        state.loadMore();\n      }\n    };\n\n    this.$scrollParent.on('scroll', this.scrollHandler);\n  }\n\n  onremove() {\n    this.$scrollParent.off('scroll', this.scrollHandler);\n  }\n\n  /**\n   * Toggle the deleted revision's information (sub-button).\n   *\n   * @param {Number} id\n   */\n  toggleSubDiff(id) {\n    const $subDiff = this.$('li.Diff#subDiff' + id);\n    const $parentDiff = this.$('li.Diff#parentDiff' + id);\n    const $icon = $parentDiff.find('.icon');\n\n    $subDiff.toggle();\n\n    // switch caret icon onClick\n    if ($icon.hasClass('fa-caret-down')) {\n      $icon.removeClass('fa-caret-down').addClass('fa-caret-up');\n    } else {\n      $icon.removeClass('fa-caret-up').addClass('fa-caret-down');\n    }\n  }\n}\n","import redrawPost from '../utils/redrawPost';\n\nexport default class DiffListState {\n  constructor(post, forModal, moreResults, selectedItem) {\n    this.post = post;\n    this.forModal = forModal;\n    this.moreResults = moreResults || false;\n    this.selectedItem = selectedItem;\n    this.loading = false;\n\n    if (!app.cache.diffs) {\n      app.cache.diffs = [];\n    }\n  }\n\n  /**\n   * Load revisions.\n   *\n   * @public\n   */\n  load() {\n    // don't do anthing if we already cached revisions for the post.\n    // lazy-loading will perform loadMore() if there are moreResults\n    if (app.cache.diffs[this.post.id()]) return this.redrawList();\n\n    this.loadMore();\n  }\n\n  /**\n   * Load the next page of revision results.\n   *\n   * @public\n   */\n  loadMore() {\n    this.loading = true;\n    this.redrawList();\n\n    // don't do anthing if we already cached ALL revisions for the post.\n    if (app.cache.diffs[this.post.id()] && app.cache.diffs[this.post.id()].length == this.post.revisionCount()) {\n      return;\n    }\n\n    // set URL parameters\n    const params = app.cache.diffs[this.post.id()]\n      ? {\n          id: this.post.id(),\n          page: {\n            offset: app.cache.diffs[this.post.id()].length * 10,\n          },\n        }\n      : {\n          id: this.post.id(),\n        };\n\n    return app.store\n      .find('diff', params)\n      .then(this.parseResults.bind(this))\n      .catch(() => {})\n      .then(() => {\n        this.loading = false;\n        this.redrawList();\n      });\n  }\n\n  /**\n   * Parse results and append them to the revision list.\n   *\n   * @param {Diff[]} results\n   * @return {Diff[]}\n   */\n  parseResults(results) {\n    app.cache.diffs[this.post.id()] = app.cache.diffs[this.post.id()] || [];\n\n    if (results.length) app.cache.diffs[this.post.id()].push(results);\n\n    this.moreResults = !!results.payload.links.next;\n\n    return results;\n  }\n\n  /**\n   * Redraw the list based on parent component.\n   */\n  redrawList() {\n    m.redraw();\n\n    // because we don't need to redraw the post\n    // to update DiffList in DiffModal.\n    // We just need it for updating DiffDropdown.\n    if (this.forModal) return;\n\n    return redrawPost(this.post);\n  }\n}\n","import Dropdown from 'flarum/common/components/Dropdown';\nimport DiffList from './DiffList';\nimport icon from 'flarum/common/helpers/icon';\nimport DiffListState from '../states/DiffListState';\n\n/**\n * The `DiffDropdown` component is the entrance point for this extension.\n * It's the component that you see when you click on \"Edited\" button.\n * It also contains DiffList components.\n */\nexport default class DiffDropdown extends Dropdown {\n  static initAttrs(attrs) {\n    attrs.className = 'DiffDropdown';\n    attrs.buttonClassName = 'Button Button--link';\n    attrs.menuClassName = attrs.menuClassName;\n    attrs.label = app.translator.trans('the-turk-diff.forum.editedText');\n    attrs.icon = 'fas fa-history';\n\n    super.initAttrs(attrs);\n  }\n\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    /**\n     * The post that we're working with.\n     *\n     * @type {Post[]}\n     */\n    this.post = this.attrs.post;\n\n    /**\n     * Create a new revision list.\n     *\n     * @type {DiffListState}\n     */\n    this.listState = new DiffListState(this.post, false, null);\n  }\n\n  getButton() {\n    const vdom = super.getButton();\n\n    vdom.attrs.title = this.attrs.label;\n    vdom.attrs.onclick = this.onclick.bind(this);\n\n    return vdom;\n  }\n\n  getButtonContent() {\n    return [\n      icon(this.attrs.icon, {\n        className: 'Button-icon',\n      }),\n      <span className=\"Button-label\">{this.attrs.label}</span>,\n    ];\n  }\n\n  getMenu() {\n    const revisionCount = this.attrs.post.revisionCount();\n\n    return (\n      <div className={'Dropdown-menu ' + this.attrs.menuClassName}>\n        <div className=\"DiffList-header\">\n          <h4>\n            {/* edited 1 time | edited x times */}\n            {app.translator.trans('the-turk-diff.forum.revisionInfo', { revisionCount })}\n          </h4>\n        </div>\n        {this.showing ? <DiffList state={this.listState}></DiffList> : ''}\n      </div>\n    );\n  }\n\n  /**\n   * Load revision list.\n   */\n  onclick() {\n    this.listState.load();\n  }\n}\n","import { extend } from 'flarum/common/extend';\n\nimport app from 'flarum/common/app';\nimport CommentPost from 'flarum/common/components/CommentPost';\nimport Page from 'flarum/common/components/Page';\nimport Post from 'flarum/common/models/Post';\nimport Model from 'flarum/common/Model';\n\nimport Diff from './models/Diff';\nimport DiffDropdown from './components/DiffDropdown';\n\napp.initializers.add('the-turk-diff', () => {\n  app.store.models.diff = Diff;\n  Post.prototype.revisionCount = Model.attribute('revisionCount');\n  Post.prototype.canViewEditHistory = Model.attribute('canViewEditHistory');\n  Post.prototype.canRollbackEditHistory = Model.attribute('canRollbackEditHistory');\n  Post.prototype.canDeleteEditHistory = Model.attribute('canDeleteEditHistory');\n\n  extend(CommentPost.prototype, 'headerItems', function (items) {\n    const post = this.attrs.post;\n\n    // replace \"edited\" text to \"edited\" button\n    if (post.isEdited() && !post.isHidden() && post.canViewEditHistory() && post.revisionCount() > 0) {\n      items.replace('edited', DiffDropdown.component({ post }));\n    }\n\n    // remove diffs cache when post is editing\n    if (this.isEditing() && app.cache.diffs && app.cache.diffs[this.attrs.post.id()]) {\n      delete app.cache.diffs[this.attrs.post.id()];\n    }\n  });\n\n  // prevent dropdown from closing when user clicks on deleted diff\n  extend(Page.prototype, 'oninit', function () {\n    $('body').on('click', 'li.ParentDiff.DeletedDiff, li.SubDiff', function (e) {\n      e.stopPropagation();\n    });\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","create","constructor","Diff","mixin","Model","revision","createdAt","deletedAt","rollbackedAt","actor","deletedUser","rollbackedUser","inlineHtml","sideBySideHtml","combinedHtml","previewHtml","comparisonBetween","DiffButton","view","attrs","assign","this","item","subButton","postDate","type","getButtonContent","buttonText","extractText","app","translator","trans","username","ago","humanTime","avatar","icon","className","title","Button","redrawPost","post","save","then","m","redraw","DiffModal","oninit","vnode","loading","showing","diffId","JSON","parse","listState","selectedItem","href","config","route","oncreate","onupdate","$","hasClass","addClass","id","old","setDiffContent","diffRenderer","onclick","hide","canDeleteEditHistory","revisionCount","canRollbackEditHistory","length","buttonClassName","menuClassName","label","confirm","number","rollbackTo","url","method","showAlert","content","class","map","switchData","showOnFocus","text","DiffList","state","renderHtml","data","attributes","containerClassName","size","onready","$revisions","$selectedItem","animate","scrollTop","offset","top","message","success","error","Alert","trust","contentType","diffContentHtml","$diffContainer","$previewContainer","$sideBySideButton","$inlineButton","$combinedButton","$previewButton","show","parent","siblings","children","setInfoContent","html","is","preview","$infoContainer","infoContentHtml","new","Modal","pages","diffs","tooltipClass","diffButton","position","component","toggleSubDiff","remove","forModal","$listContainer","find","removeClass","dom","tip","LoadingIndicator","$scrollParent","css","window","scrollHandler","viewportHeight","height","contentTop","contentHeight","scrollHeight","moreResults","loadMore","on","onremove","off","$subDiff","$icon","toggle","Component","DiffListState","cache","load","redrawList","params","page","store","parseResults","results","push","payload","links","next","DiffDropdown","initAttrs","getButton","vdom","getMenu","Dropdown","Post","extend","CommentPost","items","isEdited","isHidden","canViewEditHistory","replace","isEditing","Page","e","stopPropagation"],"sourceRoot":""}