{"version":3,"sources":["webpack://@ianm/flarum-diff/webpack/bootstrap","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/app']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/Model']\"","webpack://@ianm/flarum-diff/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/components/Button']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/utils/extractText']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/helpers/username']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/models/Post']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/components/Dropdown']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/helpers/avatar']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/extend']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/components/CommentPost']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/utils/mixin']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/Component']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/components/Modal']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/components/Alert']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/components/DiscussionPage']\"","webpack://@ianm/flarum-diff/./src/forum/models/Diff.js","webpack://@ianm/flarum-diff/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@ianm/flarum-diff/./src/forum/components/DiffButton.js","webpack://@ianm/flarum-diff/./src/forum/utils/touchDevice.js","webpack://@ianm/flarum-diff/./src/forum/utils/redrawPost.js","webpack://@ianm/flarum-diff/./src/forum/states/DiffListState.js","webpack://@ianm/flarum-diff/./src/forum/components/DiffModal.js","webpack://@ianm/flarum-diff/./src/forum/components/DiffList.js","webpack://@ianm/flarum-diff/./src/forum/components/DiffDropdown.js","webpack://@ianm/flarum-diff/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","Diff","mixin","Model","revision","attribute","createdAt","transformDate","deletedAt","rollbackedAt","actor","hasOne","deletedUser","rollbackedUser","inlineHtml","sideBySideHtml","combinedHtml","previewHtml","comparisonBetween","_extends","assign","target","arguments","length","source","apply","this","DiffButton","view","attrs","item","subButton","postDate","type","getButtonContent","buttonText","extractText","app","translator","trans","username","ago","humanTime","avatar","icon","className","title","Button","touchDevice","window","DocumentTouch","document","redrawPost","post","save","then","redraw","DiffListState","forModal","moreResults","selectedItem","loading","cache","diffs","load","id","redrawList","loadMore","revisionCount","params","page","offset","store","find","parseResults","results","push","payload","links","next","DiffModal","oninit","vnode","showing","diffId","JSON","parse","listState","href","route","user","config","oncreate","onupdate","$","hasClass","addClass","old","setDiffContent","session","preferences","diffRenderer","component","onclick","hide","canDeleteEditHistory","canRollbackEditHistory","buttonClassName","menuClassName","label","confirm","number","rollbackTo","request","url","forum","method","modal","close","showAlert","content","data-original-title","tooltip","dom","parent","trigger","data","tip","attr","transChoice","class","state","renderHtml","attributes","LoadingIndicator","onready","$revisions","$selectedItem","animate","scrollTop","top","message","success","error","alerts","show","Alert","children","trust","contentType","diffContentHtml","$diffContainer","$previewContainer","$sideBySideButton","$inlineButton","$combinedButton","$previewButton","prop","siblings","setInfoContent","html","is","savePreferences","preview","$infoContainer","infoContentHtml","new","Modal","DiffList","pages","map","items","forEach","diff","diffButton","toggleSubDiff","$listContainer","removeClass","placement","container","tooltipClass","$scrollParent","css","scrollHandler","viewportHeight","height","contentTop","contentHeight","scrollHeight","on","onremove","off","$subDiff","$icon","toggle","Component","DiffDropdown","initAttrs","getButton","vdom","getMenu","Dropdown","initializers","add","models","Post","canViewEditHistory","extend","CommentPost","isEdited","isHidden","replace","isEditing","DiscussionPage","$body","e","stopPropagation"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","module.exports = flarum.core.compat['common/app'];","module.exports = flarum.core.compat['common/Model'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/utils/extractText'];","module.exports = flarum.core.compat['common/helpers/username'];","module.exports = flarum.core.compat['common/helpers/humanTime'];","module.exports = flarum.core.compat['common/models/Post'];","module.exports = flarum.core.compat['common/components/Dropdown'];","module.exports = flarum.core.compat['common/helpers/avatar'];","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/components/CommentPost'];","module.exports = flarum.core.compat['common/utils/mixin'];","module.exports = flarum.core.compat['common/Component'];","module.exports = flarum.core.compat['common/components/Modal'];","module.exports = flarum.core.compat['common/components/Alert'];","module.exports = flarum.core.compat['common/components/DiscussionPage'];","import Model from 'flarum/common/Model';\nimport mixin from 'flarum/common/utils/mixin';\n\nexport default class Diff extends mixin(Model, {\n  revision: Model.attribute('revision'),\n  createdAt: Model.attribute('createdAt', Model.transformDate),\n  deletedAt: Model.attribute('deletedAt', Model.transformDate),\n  rollbackedAt: Model.attribute('rollbackedAt', Model.transformDate),\n  actor: Model.hasOne('actor'),\n  deletedUser: Model.hasOne('deletedUser'),\n  rollbackedUser: Model.hasOne('rollbackedUser'),\n  inlineHtml: Model.attribute('inlineHtml'),\n  sideBySideHtml: Model.attribute('sideBySideHtml'),\n  combinedHtml: Model.attribute('combinedHtml'),\n  previewHtml: Model.attribute('previewHtml'),\n  comparisonBetween: Model.attribute('comparisonBetween'),\n}) {}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import Button from 'flarum/common/components/Button';\nimport avatar from 'flarum/common/helpers/avatar';\nimport icon from 'flarum/common/helpers/icon';\nimport username from 'flarum/common/helpers/username';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport extractText from 'flarum/common/utils/extractText';\n\n/**\n * The `DiffButton` component composes a button\n * for all revisions created in DiffList.\n */\nexport default class DiffButton extends Button {\n  // see the following link to find out why i'm overriding this at all\n  // https://discuss.flarum.org/d/22728-passing-an-object-to-a-custom-button-component\n  view() {\n    const attrs = Object.assign({}, this.attrs);\n\n    delete attrs.item;\n    delete attrs.subButton;\n    delete attrs.postDate;\n\n    attrs.type = 'button';\n\n    return <button {...attrs}>{this.getButtonContent()}</button>;\n  }\n\n  getButtonContent() {\n    const revision = this.attrs.item;\n    let actor = revision.actor();\n\n    let buttonText =\n      revision.revision() == 0\n        ? /* {username} created {ago} */\n          extractText(\n            app.translator.trans('the-turk-diff.forum.createdInfo', {\n              username: username(revision.actor()),\n              ago: humanTime(this.attrs.postDate),\n            })\n          )\n        : /* {username} edited {ago} */\n          extractText(\n            app.translator.trans('the-turk-diff.forum.editedInfo', {\n              username: username(revision.actor()),\n              ago: humanTime(revision.createdAt()),\n            })\n          );\n\n    if (revision.deletedAt()) {\n      if (this.attrs.subButton === false) {\n        /* {username} did something {ago} (deleted) */\n        buttonText = buttonText + ' ' + app.translator.trans('the-turk-diff.forum.deletedText');\n      } else {\n        /* sub button text that appears when you click on caret icon */\n        actor = revision.deletedUser();\n        /* {actor} deleted this content {ago} */\n        buttonText = extractText(\n          app.translator.trans('the-turk-diff.forum.deletedInfo', {\n            username: username(revision.deletedUser()),\n            ago: humanTime(revision.deletedAt()),\n          })\n        );\n      }\n    }\n\n    return [\n      // we also should consider deleted users here\n      actor.username() ? avatar(actor) : '',\n      // does this button have an icon?\n      revision.deletedAt() && this.attrs.subButton === false\n        ? icon('fas fa-caret-down', {\n            className: 'Button-caret',\n          })\n        : '',\n      // button label\n      <span className=\"Button-label\" title={buttonText}>\n        {revision.deletedAt() && this.attrs.subButton === true ? (\n          /* emphasize deleted revision's information */\n          <em>{buttonText}</em>\n        ) : (\n          buttonText\n        )}\n      </span>,\n    ];\n  }\n}\n","/**\n * Tooltips will be skipped for touch devices. Because they're forcing users\n * to double click the buttons. They also working unstable and won't fit to\n * screen sometimes. I'm planning to deal with them later on next versions.\n * https://stackoverflow.com/a/24647710/12866913\n */\nexport default function touchDevice() {\n  return true == ('ontouchstart' in window || (window.DocumentTouch && document instanceof DocumentTouch));\n}\n","/**\n * Redraw the post.\n * Workaround for - SubtreeRetainer doesn't allow redrawing post\n * https://discuss.flarum.org/d/22755-mithril-related-issues-on-poststream-items\n *\n * @param {Object} post\n */\nexport default function redrawPost(post) {\n  return post.save({}).then(() => m.redraw());\n}\n","import redrawPost from '../utils/redrawPost';\n\nexport default class DiffListState {\n  constructor(post, forModal, moreResults, selectedItem) {\n    this.post = post;\n    this.forModal = forModal;\n    this.moreResults = moreResults || false;\n    this.selectedItem = selectedItem;\n    this.loading = false;\n\n    if (!app.cache.diffs) {\n      app.cache.diffs = [];\n    }\n  }\n\n  /**\n   * Load revisions.\n   *\n   * @public\n   */\n  load() {\n    // don't do anthing if we already cached revisions for the post.\n    // lazy-loading will perform loadMore() if there are moreResults\n    if (app.cache.diffs[this.post.id()]) return this.redrawList();\n\n    this.loadMore();\n  }\n\n  /**\n   * Load the next page of revision results.\n   *\n   * @public\n   */\n  loadMore() {\n    this.loading = true;\n    this.redrawList();\n\n    // don't do anthing if we already cached ALL revisions for the post.\n    if (app.cache.diffs[this.post.id()] && app.cache.diffs[this.post.id()].length == this.post.revisionCount()) {\n      return;\n    }\n\n    // set URL parameters\n    const params = app.cache.diffs[this.post.id()]\n      ? {\n          id: this.post.id(),\n          page: {\n            offset: app.cache.diffs[this.post.id()].length * 10,\n          },\n        }\n      : {\n          id: this.post.id(),\n        };\n\n    return app.store\n      .find('diff', params)\n      .then(this.parseResults.bind(this))\n      .catch(() => {})\n      .then(() => {\n        this.loading = false;\n        this.redrawList();\n      });\n  }\n\n  /**\n   * Parse results and append them to the revision list.\n   *\n   * @param {Diff[]} results\n   * @return {Diff[]}\n   */\n  parseResults(results) {\n    app.cache.diffs[this.post.id()] = app.cache.diffs[this.post.id()] || [];\n\n    if (results.length) app.cache.diffs[this.post.id()].push(results);\n\n    this.moreResults = !!results.payload.links.next;\n\n    return results;\n  }\n\n  /**\n   * Redraw the list based on parent component.\n   */\n  redrawList() {\n    m.redraw();\n\n    // because we don't need to redraw the post\n    // to update DiffList in DiffModal.\n    // We just need it for updating DiffDropdown.\n    if (this.forModal) return;\n\n    return redrawPost(this.post);\n  }\n}\n","import app from 'flarum/common/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport username from 'flarum/common/helpers/username';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport avatar from 'flarum/common/helpers/avatar';\nimport extractText from 'flarum/common/utils/extractText';\nimport touchDevice from '../utils/touchDevice';\nimport redrawPost from '../utils/redrawPost';\nimport Alert from 'flarum/common/components/Alert';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport DiffList from './DiffList';\nimport DiffListState from '../states/DiffListState';\n\n/**\n * The `DiffModal` component is the main component of this extension.\n * It also contains DiffList components.\n */\nexport default class DiffModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    /**\n     * Whether or not the modal is loading.\n     *\n     * @type {Boolean}\n     */\n    this.loading = false;\n\n    /**\n     * Whether the modal is showing or not.\n     *\n     * @type {Boolean}\n     */\n    this.showing = false;\n\n    /**\n     * We will use this to change modal's content when\n     * user clicks on a revision on the list.\n     *\n     * @type {Number|Null}\n     */\n    this.diffId = null;\n\n    /**\n     * This holds information about which revisions are subjects for comparison.\n     *\n     * @type {Object}\n     */\n    this.comparisonBetween = JSON.parse(this.attrs.listState.selectedItem.comparisonBetween());\n  }\n\n  className() {\n    return 'DiffModal';\n  }\n\n  title() {\n    return [\n      // we also should consider deleted users here\n      this.attrs.listState.selectedItem.actor().username() ? avatar(this.attrs.listState.selectedItem.actor()) : '',\n      this.attrs.listState.selectedItem.revision() != 0\n        ? // x edited y ago\n          app.translator.trans('the-turk-diff.forum.editedInfo', {\n            username: (\n              <a href={app.route.user(this.attrs.listState.selectedItem.actor())} config={m.route}>\n                {username(this.attrs.listState.selectedItem.actor())}\n              </a>\n            ),\n            ago: humanTime(this.attrs.listState.selectedItem.createdAt()),\n          })\n        : // x created y ago\n          app.translator.trans('the-turk-diff.forum.createdInfo', {\n            username: (\n              <a href={app.route.user(this.attrs.listState.selectedItem.actor())} config={m.route}>\n                {username(this.attrs.listState.selectedItem.actor())}\n              </a>\n            ),\n            ago: humanTime(this.attrs.listState.post.createdAt()),\n          }),\n    ];\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    this.config(vnode);\n  }\n\n  onupdate(vnode) {\n    this.config(vnode);\n  }\n\n  config(vnode) {\n    // workaround for missing 'in' class on .ModalManager\n    // after redrawing the DiffList component.\n    // because i'm done with this shit.\n    // https://github.com/flarum/core/pull/2080\n    if (this.showing && !$('.ModalManager').hasClass('in')) $('.ModalManager').addClass('in');\n\n    // we should re-Initialize this component after user\n    // clicks a different revision while modal is open\n    if (this.diffId === this.attrs.listState.selectedItem.id()) return;\n\n    this.showing = true;\n    this.diffId = this.attrs.listState.selectedItem.id();\n\n    this.comparisonBetween = JSON.parse(this.attrs.listState.selectedItem.comparisonBetween());\n\n    if (this.attrs.listState.selectedItem.revision() != 0 && this.comparisonBetween.new.revision != this.comparisonBetween.old.revision) {\n      // we'll use Side By Side renderer as a fallback\n      // if there is no renderer choice\n      return this.setDiffContent(app.session.user.preferences().diffRenderer ? app.session.user.preferences().diffRenderer : 'sideBySide');\n    } else {\n      return this.setDiffContent('preview');\n    }\n  }\n\n  view() {\n    return (\n      <div className={'Modal modal-dialog ' + this.className()}>\n        <div className=\"Modal-content\">\n          <div className=\"Modal-close App-backControl\">\n            {Button.component({\n              icon: 'fas fa-times',\n              onclick: this.hide.bind(this),\n              className: 'Button Button--icon Button--link',\n            })}\n          </div>\n          {\n            // Revision Options Button\n          }\n          {(this.attrs.listState.post.canDeleteEditHistory() &&\n            this.attrs.listState.selectedItem.revision() != this.attrs.listState.post.revisionCount()) ||\n          (this.attrs.listState.post.canRollbackEditHistory() && this.$('.DeletedDiff').length != this.attrs.listState.post.revisionCount()) ? (\n            <Dropdown\n              className=\"diffCotrollerDropdown App-primaryControl\"\n              icon=\"fas fa-ellipsis-v\"\n              buttonClassName=\"Button\"\n              menuClassName=\"Dropdown-menu--right\"\n              label={app.translator.trans('the-turk-diff.forum.optionsButton')}\n            >\n              {\n                // Rollback\n                // there must be a revision to rollback,\n                // as we can't rollback to current post.\n              }\n              {this.attrs.listState.post.canRollbackEditHistory() && this.comparisonBetween.old.diffId\n                ? Button.component(\n                    {\n                      icon: 'fas fa-reply',\n                      onclick: () => {\n                        if (\n                          confirm(\n                            app.translator.trans('the-turk-diff.forum.confirmRollback', {\n                              number: this.attrs.listState.selectedItem.revision(),\n                            })\n                          )\n                        ) {\n                          this.loading = true;\n                          m.redraw();\n\n                          let rollbackTo =\n                            this.attrs.listState.selectedItem.revision() == this.attrs.listState.post.revisionCount()\n                              ? this.comparisonBetween.old.diffId\n                              : this.attrs.listState.selectedItem.id();\n\n                          app\n                            .request({\n                              url: `${app.forum.attribute('apiUrl')}/diff/${rollbackTo}`,\n                              method: 'POST',\n                            })\n                            .then(() => {\n                              redrawPost(this.attrs.listState.post);\n                              app.modal.close();\n\n                              if (app.cache.diffs && app.cache.diffs[this.attrs.listState.post.id()]) {\n                                delete app.cache.diffs[this.attrs.listState.post.id()];\n                              }\n\n                              this.showAlert('success', 'rollback');\n                            })\n                            .catch(() => {\n                              this.loading = false;\n                              m.redraw();\n                              redrawPost(this.attrs.listState.post);\n\n                              this.showAlert('error', 'rollback');\n                            });\n                        }\n                      },\n                    },\n                    this.attrs.listState.selectedItem.revision() == 0\n                      ? /* we're viewing the original content */\n                        app.translator.trans('the-turk-diff.forum.rollbackToOriginalButton')\n                      : this.attrs.listState.selectedItem.revision() == this.attrs.listState.post.revisionCount()\n                      ? this.comparisonBetween.old.revision != 0\n                        ? /* we're comparing this revision with current content. */\n                          app.translator.trans('the-turk-diff.forum.revertChangesButton')\n                        : /* we're comparing this revision with original content */\n                          app.translator.trans('the-turk-diff.forum.rollbackToOriginalButton')\n                      : /* we're comparing this revision with another revision */\n                        app.translator.trans('the-turk-diff.forum.rollbackButton', {\n                          number: this.attrs.listState.selectedItem.revision(),\n                        })\n                  )\n                : ''}\n\n              {\n                // Delete\n                // you can't delete last item on the list\n                // because it's the current post actually.\n              }\n              {this.attrs.listState.post.canDeleteEditHistory() &&\n              this.attrs.listState.selectedItem.revision() != this.attrs.listState.post.revisionCount()\n                ? Button.component(\n                    {\n                      icon: 'far fa-trash-alt',\n                      onclick: () => {\n                        if (confirm(app.translator.trans('the-turk-diff.forum.confirmDelete'))) {\n                          this.loading = true;\n                          m.redraw();\n\n                          this.attrs.listState.selectedItem\n                            .delete()\n                            .then(() => {\n                              app.modal.close();\n\n                              if (app.cache.diffs && app.cache.diffs[this.attrs.listState.post.id()]) {\n                                delete app.cache.diffs[this.attrs.listState.post.id()];\n                              }\n\n                              this.showAlert('success', 'delete');\n                            })\n                            .catch(() => {\n                              this.loading = false;\n                              m.redraw();\n\n                              this.showAlert('error', 'delete');\n                            });\n                        }\n                      },\n                    },\n                    app.translator.trans('the-turk-diff.forum.deleteButton')\n                  )\n                : ''}\n            </Dropdown>\n          ) : (\n            ''\n          )}\n\n          <div className=\"Modal-header\">\n            <h3 className=\"App-titleControl App-titleControl--text\">{this.title()}</h3>\n          </div>\n          {this.content()}\n        </div>\n      </div>\n    );\n  }\n\n  content() {\n    // we can use this class to customize all tooltips\n    // provided by this extension\n    const tooltipClass = 'diffTooltip';\n\n    return [\n      <div className=\"diff-grid\">\n        {/* Renderer Switcher Container */}\n        <div className=\"diff-grid-item diff-grid-controls\">\n          <div className=\"diffSwitcher\">\n            {this.attrs.listState.selectedItem.revision() != 0 && this.comparisonBetween.new.revision != this.comparisonBetween.old.revision\n              ? [\n                  <div className=\"tooltip-wrapper\" data-original-title={app.translator.trans('the-turk-diff.forum.tooltips.inline')}>\n                    {Button.component({\n                      icon: 'fas fa-grip-lines',\n                      onclick: () => {\n                        // fix for Chrome\n                        // tooltips are not disappearing onclick\n                        this.$('.' + tooltipClass).tooltip('hide');\n\n                        this.setDiffContent('inline');\n                      },\n                      className: 'Button Button--icon Button--link inlineView',\n                      oncreate: (vnode) =>\n                        touchDevice() === false\n                          ? $(vnode.dom)\n                              .parent()\n                              .tooltip({\n                                trigger: 'hover',\n                              })\n                              // this is a workaround for adding custom\n                              // classes into bootstrap tooltips\n                              // https://stackoverflow.com/a/29879041/12866913\n                              .data('bs.tooltip')\n                              .tip()\n                              .addClass(tooltipClass)\n                          : '',\n                    })}\n                  </div>,\n                  <div className=\"tooltip-wrapper\" data-original-title={app.translator.trans('the-turk-diff.forum.tooltips.sideBySide')}>\n                    {Button.component({\n                      icon: 'fas fa-columns',\n                      onclick: () => {\n                        this.$('.' + tooltipClass).tooltip('hide');\n                        this.setDiffContent('sideBySide');\n                      },\n                      className: 'Button Button--icon Button--link sideBySideView',\n                      oncreate: (vnode) =>\n                        touchDevice() === false\n                          ? $(vnode.dom)\n                              .parent()\n                              .tooltip({\n                                trigger: 'hover',\n                              })\n                              .data('bs.tooltip')\n                              .tip()\n                              .addClass(tooltipClass)\n                          : '',\n                    })}\n                  </div>,\n                  <div className=\"tooltip-wrapper\" data-original-title={app.translator.trans('the-turk-diff.forum.tooltips.combined')}>\n                    {Button.component({\n                      icon: 'far fa-square',\n                      onclick: () => {\n                        this.$('.' + tooltipClass).tooltip('hide');\n                        this.setDiffContent('combined');\n                      },\n                      className: 'Button Button--icon Button--link combinedView',\n                      oncreate: (vnode) =>\n                        touchDevice() === false\n                          ? $(vnode.dom)\n                              .parent()\n                              .tooltip({\n                                trigger: 'hover',\n                              })\n                              .data('bs.tooltip')\n                              .tip()\n                              .addClass(tooltipClass)\n                          : '',\n                    })}\n                  </div>,\n                ]\n              : ''}\n            <div className=\"tooltip-wrapper\" data-original-title={app.translator.trans('the-turk-diff.forum.tooltips.preview')}>\n              {Button.component({\n                icon: 'far fa-eye',\n                onclick: () => {\n                  this.$('.' + tooltipClass).tooltip('hide');\n                  this.setDiffContent('preview');\n                },\n                className: 'Button Button--icon Button--link diffPreview',\n                oncreate: (vnode) =>\n                  touchDevice() === false\n                    ? $(vnode.dom)\n                        .parent()\n                        .tooltip({\n                          trigger: 'hover',\n                        })\n                        .attr('data-original-title', app.translator.trans('the-turk-diff.forum.tooltips.preview'))\n                        .data('bs.tooltip')\n                        .tip()\n                        .addClass(tooltipClass)\n                    : '',\n              })}\n            </div>\n          </div>\n        </div>\n\n        {/* Comparison Info Container */}\n        <div className=\"diff-grid-item diff-grid-info\">\n          <div className=\"revisionInfo\">\n            <h4>\n              {app.translator.transChoice('the-turk-diff.forum.revisions', this.attrs.listState.post.revisionCount(), {\n                revisionCount: this.attrs.listState.post.revisionCount(),\n              })}\n            </h4>\n            <p class=\"diffInfoContainer\" />\n          </div>\n        </div>\n\n        {/* Revision List Container */}\n        <div className=\"diff-grid-item diff-grid-revisions\">\n          <DiffList state={this.attrs.listState}></DiffList>\n        </div>\n\n        {/* Diffs Container */}\n        <div className=\"diff-grid-item diff-grid-diff\">\n          <div className=\"diffContents\">\n            {\n              // .previewContainer is hidden by default\n              // we'll do some nasty switches later\n            }\n            <div\n              className={\n                'previewContainer Post-body' + (app.forum.attribute('textFormattingForDiffPreviews') === false ? ' diff-skip-formatting' : '')\n              }\n            >\n              {this.renderHtml(this.attrs.listState.selectedItem.data.attributes.previewHtml)}\n            </div>\n            <div className=\"diffContainer\" />\n          </div>\n        </div>\n        {LoadingIndicator.component({\n          className: 'DiffModal-loading' + (this.loading ? ' active' : ''),\n        })}\n      </div>,\n    ];\n  }\n\n  /**\n   * Slowly scroll to selected revision.\n   */\n  onready() {\n    const $revisions = this.$('.DiffList-content');\n    let $selectedItem = this.$('li#parentDiff' + this.attrs.listState.selectedItem.id());\n\n    $revisions.animate({\n      scrollTop: $selectedItem.offset().top - $revisions.offset().top + $revisions.scrollTop(),\n    });\n  }\n\n  /**\n   * Show success and error messages for rollback and delete operations.\n   *\n   * @param {string} type\n   * @param {string} key\n   */\n  showAlert(type, key) {\n    const message = {\n      success: 'the-turk-diff.forum.' + key + 'SuccessMessage',\n      error: 'the-turk-diff.forum.' + key + 'ErrorMessage',\n    }[type];\n\n    app.alerts.show(Alert, {\n      type,\n      children: app.translator.trans(message),\n    });\n  }\n\n  /**\n   * Render the diff views provided by external lib.\n   *\n   * do we need to worry about m.trust() function?\n   * well, Flarum itself doing the same way for rendering\n   * post items as seen on CommentPost.js#L52\n   * also, the diff library itself treat all inputs as plain text:\n   * https://github.com/jfcherng/php-diff/issues/9#issuecomment-526808774\n   * so no need to use additional Sanitizer lib for this operation.\n   *\n   * @param {string} content\n   */\n  renderHtml(content) {\n    return m.trust(content);\n  }\n\n  /**\n   * Insert rendered diff views into their container\n   * and disable active views' buttons.\n   * Disabling buttons is just for indicating\n   * so frontend looks good but the backend sucks.\n   *\n   * @param {string} contentType\n   */\n  setDiffContent(contentType) {\n    let diffContentHtml;\n    const $diffContainer = this.$('.diffContainer');\n    const $previewContainer = this.$('.previewContainer');\n    const $tooltip = this.$('.diffTooltip');\n\n    // buttons\n    const $sideBySideButton = this.$('.Button.sideBySideView');\n    const $inlineButton = this.$('.Button.inlineView');\n    const $combinedButton = this.$('.Button.combinedView');\n    const $previewButton = this.$('.Button.diffPreview');\n\n    if (contentType !== 'preview') {\n      if (contentType === 'sideBySide') {\n        diffContentHtml = this.renderHtml(this.attrs.listState.selectedItem.data.attributes.sideBySideHtml);\n        $sideBySideButton.prop('disabled', true);\n        // what a dynasty - LOL\n        $sideBySideButton.parent().siblings().children().prop('disabled', false);\n      } else if (contentType === 'inline') {\n        diffContentHtml = this.renderHtml(this.attrs.listState.selectedItem.data.attributes.inlineHtml);\n        $inlineButton.prop('disabled', true);\n        $inlineButton.parent().siblings().children().prop('disabled', false);\n      } else if (contentType === 'combined') {\n        diffContentHtml = this.renderHtml(this.attrs.listState.selectedItem.data.attributes.combinedHtml);\n        $combinedButton.prop('disabled', true);\n        $combinedButton.parent().siblings().children().prop('disabled', false);\n      }\n    } else {\n      $diffContainer.hide();\n      this.$('.previewContainer').show();\n\n      $previewButton.prop('disabled', true);\n      $previewButton.parent().siblings().children().prop('disabled', false);\n      return this.setInfoContent(true);\n    }\n\n    if (diffContentHtml) {\n      $diffContainer.html(diffContentHtml.children);\n\n      if ($previewContainer.is(':visible')) {\n        $diffContainer.show();\n        $previewContainer.hide();\n      }\n\n      // let's remember their renderer choice\n      app.session.user.savePreferences({\n        diffRenderer: contentType,\n      });\n\n      return this.setInfoContent();\n    }\n\n    return;\n  }\n\n  /**\n   * Set informations about comparisons.\n   *\n   * @param {Boolean} preview\n   */\n  setInfoContent(preview = false) {\n    const $infoContainer = this.$('.diffInfoContainer');\n\n    let infoContentHtml =\n      !preview && this.attrs.listState.selectedItem.revision() != 0 && this.comparisonBetween.new.revision != this.comparisonBetween.old.revision\n        ? extractText(\n            app.translator.trans('the-turk-diff.forum.differences.sentence', {\n              old:\n                this.comparisonBetween.old.revision == -1\n                  ? /* we're viewing differences between current content and {new} */\n                    app.translator.trans('the-turk-diff.forum.differences.currentContent')\n                  : this.comparisonBetween.old.revision == 0\n                  ? /* we're viewing differences between original content and {new} */\n                    app.translator.trans('the-turk-diff.forum.differences.originalContent')\n                  : /* we're viewing differences between revision X and {new} */\n                    app.translator.trans('the-turk-diff.forum.differences.revisionWithNumber', {\n                      number: this.comparisonBetween.old.revision,\n                    }),\n              new:\n                this.comparisonBetween.new.revision == 0\n                  ? /* we're viewing differences between {old} and original content */\n                    app.translator.trans('the-turk-diff.forum.differences.originalContent')\n                  : this.comparisonBetween.new.revision == this.attrs.listState.post.revisionCount()\n                  ? /* we're viewing differences between {old} and current content */\n                    app.translator.trans('the-turk-diff.forum.differences.currentContent')\n                  : /* we're viewing differences between {old} and revision X */\n                    app.translator.trans('the-turk-diff.forum.differences.revisionWithNumber', {\n                      number: this.comparisonBetween.new.revision,\n                    }),\n            })\n          )\n        : extractText(\n            app.translator.trans('the-turk-diff.forum.previewMode.sentence', {\n              content:\n                this.comparisonBetween.new.revision == 0\n                  ? /* we're previewing original content */\n                    app.translator.trans('the-turk-diff.forum.previewMode.originalContent')\n                  : this.comparisonBetween.new.revision == this.attrs.listState.post.revisionCount()\n                  ? /* we're previewing current content */\n                    app.translator.trans('the-turk-diff.forum.previewMode.currentContent')\n                  : /* we're previewing revision X */\n                    app.translator.trans('the-turk-diff.forum.previewMode.revisionWithNumber', {\n                      number: this.comparisonBetween.new.revision,\n                    }),\n            })\n          );\n\n    return $infoContainer.html(infoContentHtml);\n  }\n}\n","import app from 'flarum/common/app';\nimport Component from 'flarum/common/Component';\nimport DiffButton from './DiffButton';\nimport DiffModal from './DiffModal';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport extractText from 'flarum/common/utils/extractText';\nimport touchDevice from '../utils/touchDevice';\n\n/**\n * The `DiffList` component displays a list of the post's revisions.\n * It's been using on both DiffDropdown & DiffModal components.\n * It also contains DiffButton components.\n */\nexport default class DiffList extends Component {\n  view() {\n    const state = this.attrs.state;\n    const pages = app.cache.diffs[state.post.id()] || [];\n\n    return (\n      <div className=\"DiffList-container\">\n        <div className=\"DiffList-content\">\n          <ul>\n            {pages.length\n              ? pages.map((diffs) => {\n                  const items = [];\n\n                  // This allows us to use .map function\n                  diffs.forEach((diff) => {\n                    items.push(diff);\n                  });\n\n                  return items.map((item) => {\n                    // we can use this class to customize all tooltips\n                    // provided by this extension\n                    const tooltipClass = 'diffTooltip';\n\n                    let diffButton = DiffButton.component({\n                      postDate: state.post.createdAt(),\n                      subButton: false,\n                      item,\n                      onclick: () => {\n                        if (!item.deletedAt()) {\n                          state.selectedItem = item;\n                          app.modal.show(DiffModal, { listState: state });\n\n                          // fix for Chrome\n                          // tooltips are not disappearing onclick\n                          $('.' + tooltipClass).tooltip('hide');\n\n                          if (state.forModal) {\n                            // .DiffList-content container of clicked revision\n                            const $listContainer = this.$('li#parentDiff' + item.id());\n\n                            // disable clicked revision, enable others\n                            $listContainer.find('button').prop('disabled', true);\n                            $listContainer.siblings().find('button').prop('disabled', false);\n                            // add 'active' class to clicked revision, remove it from others\n                            $listContainer.siblings().removeClass('active');\n                            $listContainer.addClass('active');\n                          }\n                        } else {\n                          // if revision is deleted, we'll toggle the info\n                          // like GitHub does.\n                          this.toggleSubDiff(item.id());\n                        }\n                      },\n                      oncreate: (vnode) =>\n                        touchDevice() === false\n                          ? $(vnode)\n                              .tooltip({\n                                trigger: 'hover',\n                                placement: 'left',\n                                container: 'body',\n                              })\n                              .attr(\n                                'data-original-title',\n                                extractText(\n                                  item.revision() == state.post.revisionCount()\n                                    ? // we're hovering on latest revision's button\n                                      app.translator.trans('the-turk-diff.forum.tooltips.mostRecent')\n                                    : item.revision() == 0\n                                    ? // we're hovering on zeroth revision's button\n                                      app.translator.trans('the-turk-diff.forum.tooltips.originalContent')\n                                    : // we're hovering on other revision's button\n                                      app.translator.trans('the-turk-diff.forum.tooltips.revisionWithNumber', {\n                                        number: item.revision(),\n                                      })\n                                )\n                              )\n                              // this is a workaround for adding custom\n                              // classes into bootstrap tooltips\n                              // https://stackoverflow.com/a/29879041/12866913\n                              .data('bs.tooltip')\n                              .tip()\n                              .addClass(item.deletedAt() ? tooltipClass + ' deletedDiffTooltip' : tooltipClass)\n                          : '',\n                    });\n\n                    // returns the template for revision list items\n                    return [\n                      <li className={'Diff ParentDiff' + (item.deletedAt() ? ' DeletedDiff' : '')} id={'parentDiff' + item.id()}>\n                        {diffButton}\n                      </li>,\n                      item.deletedAt() ? (\n                        <li className=\"Diff SubDiff\" id={'subDiff' + item.id()}>\n                          {DiffButton.component({\n                            postDate: state.post.createdAt(),\n                            subButton: true,\n                            item,\n                          })}\n                        </li>\n                      ) : (\n                        ''\n                      ),\n                    ];\n                  });\n                })\n              : ''}\n            {state.loading ? (\n              LoadingIndicator.component({\n                className: 'LoadingIndicator--block',\n              })\n            ) : !pages.length ? (\n              <div className=\"DiffList-empty\">{app.translator.trans('the-turk-diff.forum.emptyText')}</div>\n            ) : (\n              ''\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n    const state = this.attrs.state;\n\n    if (state.forModal && state.selectedItem) {\n      let $selectedItem = this.$('li#parentDiff' + state.selectedItem);\n      $selectedItem.find('button').prop('disabled', true);\n      $selectedItem.addClass('active');\n    }\n\n    const $revisions = this.$('.DiffList-content');\n    this.$scrollParent = $revisions.css('overflow') === 'auto' ? $revisions : $(window);\n\n    // Lazy-loading implementation for the revision list\n    // simply checks if we're bottom of the list\n    // and if there are more results to show\n    this.scrollHandler = () => {\n      const scrollTop = $scrollParent.scrollTop();\n      const viewportHeight = $scrollParent.height();\n      const contentTop = $scrollParent === $revisions ? 0 : $revisions.offset().top;\n      const contentHeight = $revisions[0].scrollHeight;\n\n      if (state.moreResults && !state.loading && scrollTop + viewportHeight >= contentTop + contentHeight) {\n        state.loadMore();\n      }\n    };\n\n    this.$scrollParent.on('scroll', this.scrollHandler);\n  }\n\n  onremove(vnode) {\n    this.$scrollParent.off('scroll', this.scrollHandler);\n  }\n\n  /**\n   * Toggle the deleted revision's information (sub-button).\n   *\n   * @param {Number} id\n   */\n  toggleSubDiff(id) {\n    const $subDiff = this.$('li.Diff#subDiff' + id);\n    const $parentDiff = this.$('li.Diff#parentDiff' + id);\n    const $icon = $parentDiff.find('.icon');\n\n    $subDiff.toggle();\n\n    // switch caret icon onClick\n    if ($icon.hasClass('fa-caret-down')) {\n      $icon.removeClass('fa-caret-down').addClass('fa-caret-up');\n    } else {\n      $icon.removeClass('fa-caret-up').addClass('fa-caret-down');\n    }\n  }\n}\n","import Dropdown from 'flarum/common/components/Dropdown';\nimport DiffList from './DiffList';\nimport icon from 'flarum/common/helpers/icon';\nimport DiffListState from '../states/DiffListState';\n\n/**\n * The `DiffDropdown` component is the entrance point for this extension.\n * It's the component that you see when you click on \"Edited\" button.\n * It also contains DiffList components.\n */\nexport default class DiffDropdown extends Dropdown {\n  static initAttrs(attrs) {\n    attrs.className = 'DiffDropdown';\n    attrs.buttonClassName = 'Button Button--link';\n    attrs.menuClassName = attrs.menuClassName;\n    attrs.label = app.translator.trans('the-turk-diff.forum.editedText');\n    attrs.icon = 'fas fa-history';\n\n    super.initAttrs(attrs);\n  }\n\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    /**\n     * The post that we're working with.\n     *\n     * @type {Post[]}\n     */\n    this.post = this.attrs.post;\n\n    /**\n     * Create a new revision list.\n     *\n     * @type {DiffListState}\n     */\n    this.listState = new DiffListState(this.post, false, null);\n  }\n\n  getButton() {\n    const vdom = super.getButton();\n\n    vdom.attrs.title = this.attrs.label;\n    vdom.attrs.onclick = this.onclick.bind(this);\n\n    return vdom;\n  }\n\n  getButtonContent() {\n    return [\n      icon(this.attrs.icon, {\n        className: 'Button-icon',\n      }),\n      <span className=\"Button-label\">{this.attrs.label}</span>,\n    ];\n  }\n\n  getMenu() {\n    return (\n      <div className={'Dropdown-menu ' + this.attrs.menuClassName}>\n        <div className=\"DiffList-header\">\n          <h4>\n            {/* edited 1 time | edited x times */}\n            {app.translator.transChoice('the-turk-diff.forum.revisionInfo', this.attrs.post.revisionCount(), {\n              revisionCount: this.attrs.post.revisionCount(),\n            })}\n          </h4>\n        </div>\n        {this.showing ? <DiffList state={this.listState}></DiffList> : ''}\n      </div>\n    );\n  }\n\n  /**\n   * Load revision list.\n   */\n  onclick() {\n    this.listState.load();\n  }\n}\n","import app from 'flarum/common/app';\nimport { extend } from 'flarum/common/extend';\nimport CommentPost from 'flarum/common/components/CommentPost';\nimport Diff from './models/Diff';\nimport Post from 'flarum/common/models/Post';\nimport Model from 'flarum/common/Model';\nimport DiffDropdown from './components/DiffDropdown';\nimport DiscussionPage from 'flarum/common/components/DiscussionPage';\n\napp.initializers.add('ianm-diff', () => {\n  app.store.models.diff = Diff;\n  Post.prototype.revisionCount = Model.attribute('revisionCount');\n  Post.prototype.canViewEditHistory = Model.attribute('canViewEditHistory');\n  Post.prototype.canRollbackEditHistory = Model.attribute('canRollbackEditHistory');\n  Post.prototype.canDeleteEditHistory = Model.attribute('canDeleteEditHistory');\n\n  extend(CommentPost.prototype, 'headerItems', function (items) {\n    const post = this.attrs.post;\n\n    // replace \"edited\" text to \"edited\" button\n    if (post.isEdited() && !post.isHidden() && post.canViewEditHistory() && post.revisionCount() > 0) {\n      items.replace('edited', DiffDropdown.component({ post }));\n    }\n\n    // remove diffs cache when post is editing\n    if (this.isEditing() && app.cache.diffs && app.cache.diffs[this.attrs.post.id()]) {\n      delete app.cache.diffs[this.attrs.post.id()];\n    }\n  });\n\n  // prevent dropdown from closing when user\n  // clicks on deleted diff\n  extend(DiscussionPage.prototype, 'oninit', function () {\n    const $body = $('body');\n\n    $body.on('click', 'li.ParentDiff.DeletedDiff', function (e) {\n      e.stopPropagation();\n    });\n\n    $body.on('click', 'li.SubDiff', function (e) {\n      e.stopPropagation();\n    });\n  });\n});\n"],"sourceRoot":""}