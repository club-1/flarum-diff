{"version":3,"sources":["webpack://@ianm/flarum-diff/webpack/bootstrap","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/app']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/Model']\"","webpack://@ianm/flarum-diff/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@ianm/flarum-diff/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/components/Button']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/helpers/username']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/utils/extractText']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/components/Tooltip']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/models/Post']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/components/Dropdown']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/helpers/avatar']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/extend']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/utils/mixin']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/Component']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/components/Modal']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['common/components/Alert']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@ianm/flarum-diff/./src/forum/models/Diff.js","webpack://@ianm/flarum-diff/./src/forum/components/DiffButton.js","webpack://@ianm/flarum-diff/./src/forum/utils/redrawPost.js","webpack://@ianm/flarum-diff/./src/forum/states/DiffListState.js","webpack://@ianm/flarum-diff/./src/forum/components/DiffModal.js","webpack://@ianm/flarum-diff/./src/forum/components/DiffList.js","webpack://@ianm/flarum-diff/./src/forum/components/DiffDropdown.js","webpack://@ianm/flarum-diff/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","Diff","mixin","Model","revision","attribute","createdAt","transformDate","deletedAt","rollbackedAt","actor","hasOne","deletedUser","rollbackedUser","inlineHtml","sideBySideHtml","combinedHtml","previewHtml","comparisonBetween","DiffButton","view","attrs","assign","this","item","subButton","postDate","type","getButtonContent","buttonText","extractText","app","translator","trans","username","ago","humanTime","avatar","icon","className","title","Button","redrawPost","post","save","then","redraw","DiffListState","forModal","moreResults","selectedItem","loading","cache","diffs","load","id","redrawList","loadMore","length","revisionCount","params","page","offset","store","find","parseResults","results","push","payload","links","next","DiffModal","oninit","vnode","showing","diffId","JSON","parse","listState","href","route","user","config","oncreate","onupdate","$","hasClass","addClass","old","setDiffContent","session","preferences","diffRenderer","component","onclick","hide","canDeleteEditHistory","canRollbackEditHistory","buttonClassName","menuClassName","label","confirm","number","rollbackTo","request","url","forum","method","modal","close","showAlert","content","class","map","switchData","text","state","renderHtml","data","attributes","LoadingIndicator","onready","$revisions","$selectedItem","animate","scrollTop","top","message","success","error","alerts","show","Alert","children","trust","contentType","diffContentHtml","$diffContainer","$previewContainer","$sideBySideButton","$inlineButton","$combinedButton","$previewButton","prop","parent","siblings","setInfoContent","html","is","savePreferences","preview","$infoContainer","infoContentHtml","new","Modal","DiffList","pages","diffButton","position","toggleSubDiff","$listContainer","removeClass","dom","tip","tooltipClass","$scrollParent","css","window","scrollHandler","viewportHeight","height","contentTop","contentHeight","scrollHeight","on","onremove","off","$subDiff","$icon","toggle","Component","DiffDropdown","initAttrs","getButton","vdom","getMenu","Dropdown","initializers","add","models","diff","Post","canViewEditHistory","extend","CommentPost","items","isEdited","isHidden","replace","isEditing","DiscussionPage","$body","e","stopPropagation"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","module.exports = flarum.core.compat['common/app'];","module.exports = flarum.core.compat['common/Model'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/helpers/username'];","module.exports = flarum.core.compat['common/helpers/humanTime'];","module.exports = flarum.core.compat['common/utils/extractText'];","module.exports = flarum.core.compat['common/components/Tooltip'];","module.exports = flarum.core.compat['common/models/Post'];","module.exports = flarum.core.compat['common/components/Dropdown'];","module.exports = flarum.core.compat['common/helpers/avatar'];","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['forum/components/CommentPost'];","module.exports = flarum.core.compat['common/utils/mixin'];","module.exports = flarum.core.compat['common/Component'];","module.exports = flarum.core.compat['common/components/Modal'];","module.exports = flarum.core.compat['common/components/Alert'];","module.exports = flarum.core.compat['forum/components/DiscussionPage'];","import Model from 'flarum/common/Model';\nimport mixin from 'flarum/common/utils/mixin';\n\nexport default class Diff extends mixin(Model, {\n  revision: Model.attribute('revision'),\n  createdAt: Model.attribute('createdAt', Model.transformDate),\n  deletedAt: Model.attribute('deletedAt', Model.transformDate),\n  rollbackedAt: Model.attribute('rollbackedAt', Model.transformDate),\n  actor: Model.hasOne('actor'),\n  deletedUser: Model.hasOne('deletedUser'),\n  rollbackedUser: Model.hasOne('rollbackedUser'),\n  inlineHtml: Model.attribute('inlineHtml'),\n  sideBySideHtml: Model.attribute('sideBySideHtml'),\n  combinedHtml: Model.attribute('combinedHtml'),\n  previewHtml: Model.attribute('previewHtml'),\n  comparisonBetween: Model.attribute('comparisonBetween'),\n}) {}\n","import Button from 'flarum/common/components/Button';\nimport avatar from 'flarum/common/helpers/avatar';\nimport icon from 'flarum/common/helpers/icon';\nimport username from 'flarum/common/helpers/username';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport extractText from 'flarum/common/utils/extractText';\n\n/**\n * The `DiffButton` component composes a button\n * for all revisions created in DiffList.\n */\nexport default class DiffButton extends Button {\n  // see the following link to find out why i'm overriding this at all\n  // https://discuss.flarum.org/d/22728-passing-an-object-to-a-custom-button-component\n  view() {\n    const attrs = Object.assign({}, this.attrs);\n\n    delete attrs.item;\n    delete attrs.subButton;\n    delete attrs.postDate;\n\n    attrs.type = 'button';\n\n    return <button {...attrs}>{this.getButtonContent()}</button>;\n  }\n\n  getButtonContent() {\n    const revision = this.attrs.item;\n    let actor = revision.actor();\n\n    let buttonText =\n      revision.revision() == 0\n        ? /* {username} created {ago} */\n          extractText(\n            app.translator.trans('the-turk-diff.forum.createdInfo', {\n              username: username(revision.actor()),\n              ago: humanTime(this.attrs.postDate),\n            })\n          )\n        : /* {username} edited {ago} */\n          extractText(\n            app.translator.trans('the-turk-diff.forum.editedInfo', {\n              username: username(revision.actor()),\n              ago: humanTime(revision.createdAt()),\n            })\n          );\n\n    if (revision.deletedAt()) {\n      if (this.attrs.subButton === false) {\n        /* {username} did something {ago} (deleted) */\n        buttonText = buttonText + ' ' + app.translator.trans('the-turk-diff.forum.deletedText');\n      } else {\n        /* sub button text that appears when you click on caret icon */\n        actor = revision.deletedUser();\n        /* {actor} deleted this content {ago} */\n        buttonText = extractText(\n          app.translator.trans('the-turk-diff.forum.deletedInfo', {\n            username: username(revision.deletedUser()),\n            ago: humanTime(revision.deletedAt()),\n          })\n        );\n      }\n    }\n\n    return [\n      // we also should consider deleted users here\n      actor.username() ? avatar(actor) : '',\n      // does this button have an icon?\n      revision.deletedAt() && this.attrs.subButton === false\n        ? icon('fas fa-caret-down', {\n            className: 'Button-caret',\n          })\n        : '',\n      // button label\n      <span className=\"Button-label\" title={buttonText}>\n        {revision.deletedAt() && this.attrs.subButton === true ? (\n          /* emphasize deleted revision's information */\n          <em>{buttonText}</em>\n        ) : (\n          buttonText\n        )}\n      </span>,\n    ];\n  }\n}\n","/**\n * Redraw the post.\n * Workaround for - SubtreeRetainer doesn't allow redrawing post\n * https://discuss.flarum.org/d/22755-mithril-related-issues-on-poststream-items\n *\n * @param {Object} post\n */\nexport default function redrawPost(post) {\n  return post.save({}).then(() => m.redraw());\n}\n","import redrawPost from '../utils/redrawPost';\n\nexport default class DiffListState {\n  constructor(post, forModal, moreResults, selectedItem) {\n    this.post = post;\n    this.forModal = forModal;\n    this.moreResults = moreResults || false;\n    this.selectedItem = selectedItem;\n    this.loading = false;\n\n    if (!app.cache.diffs) {\n      app.cache.diffs = [];\n    }\n  }\n\n  /**\n   * Load revisions.\n   *\n   * @public\n   */\n  load() {\n    // don't do anthing if we already cached revisions for the post.\n    // lazy-loading will perform loadMore() if there are moreResults\n    if (app.cache.diffs[this.post.id()]) return this.redrawList();\n\n    this.loadMore();\n  }\n\n  /**\n   * Load the next page of revision results.\n   *\n   * @public\n   */\n  loadMore() {\n    this.loading = true;\n    this.redrawList();\n\n    // don't do anthing if we already cached ALL revisions for the post.\n    if (app.cache.diffs[this.post.id()] && app.cache.diffs[this.post.id()].length == this.post.revisionCount()) {\n      return;\n    }\n\n    // set URL parameters\n    const params = app.cache.diffs[this.post.id()]\n      ? {\n          id: this.post.id(),\n          page: {\n            offset: app.cache.diffs[this.post.id()].length * 10,\n          },\n        }\n      : {\n          id: this.post.id(),\n        };\n\n    return app.store\n      .find('diff', params)\n      .then(this.parseResults.bind(this))\n      .catch(() => {})\n      .then(() => {\n        this.loading = false;\n        this.redrawList();\n      });\n  }\n\n  /**\n   * Parse results and append them to the revision list.\n   *\n   * @param {Diff[]} results\n   * @return {Diff[]}\n   */\n  parseResults(results) {\n    app.cache.diffs[this.post.id()] = app.cache.diffs[this.post.id()] || [];\n\n    if (results.length) app.cache.diffs[this.post.id()].push(results);\n\n    this.moreResults = !!results.payload.links.next;\n\n    return results;\n  }\n\n  /**\n   * Redraw the list based on parent component.\n   */\n  redrawList() {\n    m.redraw();\n\n    // because we don't need to redraw the post\n    // to update DiffList in DiffModal.\n    // We just need it for updating DiffDropdown.\n    if (this.forModal) return;\n\n    return redrawPost(this.post);\n  }\n}\n","import app from 'flarum/common/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport username from 'flarum/common/helpers/username';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport avatar from 'flarum/common/helpers/avatar';\nimport extractText from 'flarum/common/utils/extractText';\nimport touchDevice from '../utils/touchDevice';\nimport redrawPost from '../utils/redrawPost';\nimport Alert from 'flarum/common/components/Alert';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport DiffList from './DiffList';\nimport DiffListState from '../states/DiffListState';\n\n/**\n * The `DiffModal` component is the main component of this extension.\n * It also contains DiffList components.\n */\nexport default class DiffModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    /**\n     * Whether or not the modal is loading.\n     *\n     * @type {Boolean}\n     */\n    this.loading = false;\n\n    /**\n     * Whether the modal is showing or not.\n     *\n     * @type {Boolean}\n     */\n    this.showing = false;\n\n    /**\n     * We will use this to change modal's content when\n     * user clicks on a revision on the list.\n     *\n     * @type {Number|Null}\n     */\n    this.diffId = null;\n\n    /**\n     * This holds information about which revisions are subjects for comparison.\n     *\n     * @type {Object}\n     */\n    this.comparisonBetween = JSON.parse(this.attrs.listState.selectedItem.comparisonBetween());\n  }\n\n  className() {\n    return 'DiffModal';\n  }\n\n  title() {\n    return [\n      // we also should consider deleted users here\n      this.attrs.listState.selectedItem.actor().username() ? avatar(this.attrs.listState.selectedItem.actor()) : '',\n      this.attrs.listState.selectedItem.revision() != 0\n        ? // x edited y ago\n          app.translator.trans('the-turk-diff.forum.editedInfo', {\n            username: (\n              <a href={app.route.user(this.attrs.listState.selectedItem.actor())} config={m.route}>\n                {username(this.attrs.listState.selectedItem.actor())}\n              </a>\n            ),\n            ago: humanTime(this.attrs.listState.selectedItem.createdAt()),\n          })\n        : // x created y ago\n          app.translator.trans('the-turk-diff.forum.createdInfo', {\n            username: (\n              <a href={app.route.user(this.attrs.listState.selectedItem.actor())} config={m.route}>\n                {username(this.attrs.listState.selectedItem.actor())}\n              </a>\n            ),\n            ago: humanTime(this.attrs.listState.post.createdAt()),\n          }),\n    ];\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    this.config(vnode);\n  }\n\n  onupdate(vnode) {\n    this.config(vnode);\n  }\n\n  config(vnode) {\n    // workaround for missing 'in' class on .ModalManager\n    // after redrawing the DiffList component.\n    // because i'm done with this shit.\n    // https://github.com/flarum/core/pull/2080\n    if (this.showing && !$('.ModalManager').hasClass('in')) $('.ModalManager').addClass('in');\n\n    // we should re-Initialize this component after user\n    // clicks a different revision while modal is open\n    if (this.diffId === this.attrs.listState.selectedItem.id()) return;\n\n    this.showing = true;\n    this.diffId = this.attrs.listState.selectedItem.id();\n\n    this.comparisonBetween = JSON.parse(this.attrs.listState.selectedItem.comparisonBetween());\n\n    if (this.attrs.listState.selectedItem.revision() != 0 && this.comparisonBetween.new.revision != this.comparisonBetween.old.revision) {\n      // we'll use Side By Side renderer as a fallback\n      // if there is no renderer choice\n      return this.setDiffContent(app.session.user.preferences().diffRenderer ? app.session.user.preferences().diffRenderer : 'sideBySide');\n    } else {\n      return this.setDiffContent('preview');\n    }\n  }\n\n  view() {\n    return (\n      <div className={'Modal modal-dialog ' + this.className()}>\n        <div className=\"Modal-content\">\n          <div className=\"Modal-close App-backControl\">\n            {Button.component({\n              icon: 'fas fa-times',\n              onclick: this.hide.bind(this),\n              className: 'Button Button--icon Button--link',\n            })}\n          </div>\n          {\n            // Revision Options Button\n          }\n          {(this.attrs.listState.post.canDeleteEditHistory() &&\n            this.attrs.listState.selectedItem.revision() != this.attrs.listState.post.revisionCount()) ||\n          (this.attrs.listState.post.canRollbackEditHistory() && this.$('.DeletedDiff').length != this.attrs.listState.post.revisionCount()) ? (\n            <Dropdown\n              className=\"diffCotrollerDropdown App-primaryControl\"\n              icon=\"fas fa-ellipsis-v\"\n              buttonClassName=\"Button\"\n              menuClassName=\"Dropdown-menu--right\"\n              label={app.translator.trans('the-turk-diff.forum.optionsButton')}\n            >\n              {\n                // Rollback\n                // there must be a revision to rollback,\n                // as we can't rollback to current post.\n              }\n              {this.attrs.listState.post.canRollbackEditHistory() && this.comparisonBetween.old.diffId\n                ? Button.component(\n                    {\n                      icon: 'fas fa-reply',\n                      onclick: () => {\n                        if (\n                          confirm(\n                            app.translator.trans('the-turk-diff.forum.confirmRollback', {\n                              number: this.attrs.listState.selectedItem.revision(),\n                            })\n                          )\n                        ) {\n                          this.loading = true;\n                          m.redraw();\n\n                          let rollbackTo =\n                            this.attrs.listState.selectedItem.revision() == this.attrs.listState.post.revisionCount()\n                              ? this.comparisonBetween.old.diffId\n                              : this.attrs.listState.selectedItem.id();\n\n                          app\n                            .request({\n                              url: `${app.forum.attribute('apiUrl')}/diff/${rollbackTo}`,\n                              method: 'POST',\n                            })\n                            .then(() => {\n                              redrawPost(this.attrs.listState.post);\n                              app.modal.close();\n\n                              if (app.cache.diffs && app.cache.diffs[this.attrs.listState.post.id()]) {\n                                delete app.cache.diffs[this.attrs.listState.post.id()];\n                              }\n\n                              this.showAlert('success', 'rollback');\n                            })\n                            .catch(() => {\n                              this.loading = false;\n                              m.redraw();\n                              redrawPost(this.attrs.listState.post);\n\n                              this.showAlert('error', 'rollback');\n                            });\n                        }\n                      },\n                    },\n                    this.attrs.listState.selectedItem.revision() == 0\n                      ? /* we're viewing the original content */\n                        app.translator.trans('the-turk-diff.forum.rollbackToOriginalButton')\n                      : this.attrs.listState.selectedItem.revision() == this.attrs.listState.post.revisionCount()\n                      ? this.comparisonBetween.old.revision != 0\n                        ? /* we're comparing this revision with current content. */\n                          app.translator.trans('the-turk-diff.forum.revertChangesButton')\n                        : /* we're comparing this revision with original content */\n                          app.translator.trans('the-turk-diff.forum.rollbackToOriginalButton')\n                      : /* we're comparing this revision with another revision */\n                        app.translator.trans('the-turk-diff.forum.rollbackButton', {\n                          number: this.attrs.listState.selectedItem.revision(),\n                        })\n                  )\n                : ''}\n\n              {\n                // Delete\n                // you can't delete last item on the list\n                // because it's the current post actually.\n              }\n              {this.attrs.listState.post.canDeleteEditHistory() &&\n              this.attrs.listState.selectedItem.revision() != this.attrs.listState.post.revisionCount()\n                ? Button.component(\n                    {\n                      icon: 'far fa-trash-alt',\n                      onclick: () => {\n                        if (confirm(app.translator.trans('the-turk-diff.forum.confirmDelete'))) {\n                          this.loading = true;\n                          m.redraw();\n\n                          this.attrs.listState.selectedItem\n                            .delete()\n                            .then(() => {\n                              app.modal.close();\n\n                              if (app.cache.diffs && app.cache.diffs[this.attrs.listState.post.id()]) {\n                                delete app.cache.diffs[this.attrs.listState.post.id()];\n                              }\n\n                              this.showAlert('success', 'delete');\n                            })\n                            .catch(() => {\n                              this.loading = false;\n                              m.redraw();\n\n                              this.showAlert('error', 'delete');\n                            });\n                        }\n                      },\n                    },\n                    app.translator.trans('the-turk-diff.forum.deleteButton')\n                  )\n                : ''}\n            </Dropdown>\n          ) : (\n            ''\n          )}\n\n          <div className=\"Modal-header\">\n            <h3 className=\"App-titleControl App-titleControl--text\">{this.title()}</h3>\n          </div>\n          {this.content()}\n        </div>\n      </div>\n    );\n  }\n\n  content() {\n    // we can use this class to customize all tooltips\n    // provided by this extension\n    const tooltipClass = 'diffTooltip';\n    const revisionCount = this.attrs.listState.post.revisionCount();\n\n    /**\n     * `type` is passed to `setDiffContent` and the tooltip.\n     */\n    const diffSwitches = [\n      {\n        type: 'inline',\n        icon: 'fas fa-grip-lines',\n        class: 'inlineView',\n      },\n      {\n        type: 'sideBySide',\n        icon: 'fas fa-columns',\n        class: 'sideBySideView',\n      },\n      {\n        type: 'combined',\n        icon: 'far fa-square',\n        class: 'combinedView',\n      },\n    ];\n\n    return [\n      <div className=\"diff-grid\">\n        {/* Renderer Switcher Container */}\n        <div className=\"diff-grid-item diff-grid-controls\">\n          <div className=\"diffSwitcher\">\n            {this.attrs.listState.selectedItem.revision() != 0 && this.comparisonBetween.new.revision != this.comparisonBetween.old.revision\n              ? diffSwitches.map((switchData) => (\n                  <Tooltip text={app.translator.trans(`the-turk-diff.forum.tooltips.${switchData.type}`)}>\n                    <div className=\"tooltip-wrapper\">\n                      <Button\n                        icon={switchData.icon}\n                        onclick={() => this.setDiffContent(switchData.type)}\n                        className={`Button Button--icon Button--link ${switchData.class}`}\n                      />\n                    </div>\n                  </Tooltip>\n                ))\n              : ''}\n            <Tooltip text={app.translator.trans('the-turk-diff.forum.tooltips.preview')}>\n              <div className=\"tooltip-wrapper\">\n                <Button icon=\"far fa-eye\" onclick={() => this.setDiffContent('preview')} className=\"Button Button--icon Button--link diffPreview\" />\n              </div>\n            </Tooltip>\n          </div>\n        </div>\n\n        {/* Comparison Info Container */}\n        <div className=\"diff-grid-item diff-grid-info\">\n          <div className=\"revisionInfo\">\n            <h4>{app.translator.trans('the-turk-diff.forum.revisions', { revisionCount })}</h4>\n            <p class=\"diffInfoContainer\" />\n          </div>\n        </div>\n\n        {/* Revision List Container */}\n        <div className=\"diff-grid-item diff-grid-revisions\">\n          <DiffList state={this.attrs.listState}></DiffList>\n        </div>\n\n        {/* Diffs Container */}\n        <div className=\"diff-grid-item diff-grid-diff\">\n          <div className=\"diffContents\">\n            {\n              // .previewContainer is hidden by default\n              // we'll do some nasty switches later\n            }\n            <div\n              className={\n                'previewContainer Post-body' + (app.forum.attribute('textFormattingForDiffPreviews') === false ? ' diff-skip-formatting' : '')\n              }\n            >\n              {this.renderHtml(this.attrs.listState.selectedItem.data.attributes.previewHtml)}\n            </div>\n            <div className=\"diffContainer\" />\n          </div>\n        </div>\n        {LoadingIndicator.component({\n          className: 'DiffModal-loading' + (this.loading ? ' active' : ''),\n        })}\n      </div>,\n    ];\n  }\n\n  /**\n   * Slowly scroll to selected revision.\n   */\n  onready() {\n    const $revisions = this.$('.DiffList-content');\n    let $selectedItem = this.$('li#parentDiff' + this.attrs.listState.selectedItem.id());\n\n    $revisions.animate({\n      scrollTop: $selectedItem.offset().top - $revisions.offset().top + $revisions.scrollTop(),\n    });\n  }\n\n  /**\n   * Show success and error messages for rollback and delete operations.\n   *\n   * @param {string} type\n   * @param {string} key\n   */\n  showAlert(type, key) {\n    const message = {\n      success: 'the-turk-diff.forum.' + key + 'SuccessMessage',\n      error: 'the-turk-diff.forum.' + key + 'ErrorMessage',\n    }[type];\n\n    app.alerts.show(Alert, {\n      type,\n      children: app.translator.trans(message),\n    });\n  }\n\n  /**\n   * Render the diff views provided by external lib.\n   *\n   * do we need to worry about m.trust() function?\n   * well, Flarum itself doing the same way for rendering\n   * post items as seen on CommentPost.js#L52\n   * also, the diff library itself treat all inputs as plain text:\n   * https://github.com/jfcherng/php-diff/issues/9#issuecomment-526808774\n   * so no need to use additional Sanitizer lib for this operation.\n   *\n   * @param {string} content\n   */\n  renderHtml(content) {\n    return m.trust(content);\n  }\n\n  /**\n   * Insert rendered diff views into their container\n   * and disable active views' buttons.\n   * Disabling buttons is just for indicating\n   * so frontend looks good but the backend sucks.\n   *\n   * @param {string} contentType\n   */\n  setDiffContent(contentType) {\n    let diffContentHtml;\n    const $diffContainer = this.$('.diffContainer');\n    const $previewContainer = this.$('.previewContainer');\n    const $tooltip = this.$('.diffTooltip');\n\n    // buttons\n    const $sideBySideButton = this.$('.Button.sideBySideView');\n    const $inlineButton = this.$('.Button.inlineView');\n    const $combinedButton = this.$('.Button.combinedView');\n    const $previewButton = this.$('.Button.diffPreview');\n\n    if (contentType !== 'preview') {\n      if (contentType === 'sideBySide') {\n        diffContentHtml = this.renderHtml(this.attrs.listState.selectedItem.data.attributes.sideBySideHtml);\n        $sideBySideButton.prop('disabled', true);\n        // what a dynasty - LOL\n        $sideBySideButton.parent().siblings().children().prop('disabled', false);\n      } else if (contentType === 'inline') {\n        diffContentHtml = this.renderHtml(this.attrs.listState.selectedItem.data.attributes.inlineHtml);\n        $inlineButton.prop('disabled', true);\n        $inlineButton.parent().siblings().children().prop('disabled', false);\n      } else if (contentType === 'combined') {\n        diffContentHtml = this.renderHtml(this.attrs.listState.selectedItem.data.attributes.combinedHtml);\n        $combinedButton.prop('disabled', true);\n        $combinedButton.parent().siblings().children().prop('disabled', false);\n      }\n    } else {\n      $diffContainer.hide();\n      this.$('.previewContainer').show();\n\n      $previewButton.prop('disabled', true);\n      $previewButton.parent().siblings().children().prop('disabled', false);\n      return this.setInfoContent(true);\n    }\n\n    if (diffContentHtml) {\n      $diffContainer.html(diffContentHtml.children);\n\n      if ($previewContainer.is(':visible')) {\n        $diffContainer.show();\n        $previewContainer.hide();\n      }\n\n      // let's remember their renderer choice\n      app.session.user.savePreferences({\n        diffRenderer: contentType,\n      });\n\n      return this.setInfoContent();\n    }\n\n    return;\n  }\n\n  /**\n   * Set informations about comparisons.\n   *\n   * @param {Boolean} preview\n   */\n  setInfoContent(preview = false) {\n    const $infoContainer = this.$('.diffInfoContainer');\n\n    let infoContentHtml =\n      !preview && this.attrs.listState.selectedItem.revision() != 0 && this.comparisonBetween.new.revision != this.comparisonBetween.old.revision\n        ? extractText(\n            app.translator.trans('the-turk-diff.forum.differences.sentence', {\n              old:\n                this.comparisonBetween.old.revision == -1\n                  ? /* we're viewing differences between current content and {new} */\n                    app.translator.trans('the-turk-diff.forum.differences.currentContent')\n                  : this.comparisonBetween.old.revision == 0\n                  ? /* we're viewing differences between original content and {new} */\n                    app.translator.trans('the-turk-diff.forum.differences.originalContent')\n                  : /* we're viewing differences between revision X and {new} */\n                    app.translator.trans('the-turk-diff.forum.differences.revisionWithNumber', {\n                      number: this.comparisonBetween.old.revision,\n                    }),\n              new:\n                this.comparisonBetween.new.revision == 0\n                  ? /* we're viewing differences between {old} and original content */\n                    app.translator.trans('the-turk-diff.forum.differences.originalContent')\n                  : this.comparisonBetween.new.revision == this.attrs.listState.post.revisionCount()\n                  ? /* we're viewing differences between {old} and current content */\n                    app.translator.trans('the-turk-diff.forum.differences.currentContent')\n                  : /* we're viewing differences between {old} and revision X */\n                    app.translator.trans('the-turk-diff.forum.differences.revisionWithNumber', {\n                      number: this.comparisonBetween.new.revision,\n                    }),\n            })\n          )\n        : extractText(\n            app.translator.trans('the-turk-diff.forum.previewMode.sentence', {\n              content:\n                this.comparisonBetween.new.revision == 0\n                  ? /* we're previewing original content */\n                    app.translator.trans('the-turk-diff.forum.previewMode.originalContent')\n                  : this.comparisonBetween.new.revision == this.attrs.listState.post.revisionCount()\n                  ? /* we're previewing current content */\n                    app.translator.trans('the-turk-diff.forum.previewMode.currentContent')\n                  : /* we're previewing revision X */\n                    app.translator.trans('the-turk-diff.forum.previewMode.revisionWithNumber', {\n                      number: this.comparisonBetween.new.revision,\n                    }),\n            })\n          );\n\n    return $infoContainer.html(infoContentHtml);\n  }\n}\n","import app from 'flarum/common/app';\nimport Component from 'flarum/common/Component';\nimport DiffButton from './DiffButton';\nimport DiffModal from './DiffModal';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\n/**\n * The `DiffList` component displays a list of the post's revisions.\n * It's been using on both DiffDropdown & DiffModal components.\n * It also contains DiffButton components.\n */\nexport default class DiffList extends Component {\n  view() {\n    const state = this.attrs.state;\n    const pages = app.cache.diffs[state.post.id()] || [];\n\n    return (\n      <div className=\"DiffList-container\">\n        <div className=\"DiffList-content\">\n          <ul>\n            {pages.length\n              ? pages.map((diffs) => {\n                  return diffs.map((item) => {\n                    // we can use this class to customize all tooltips\n                    // provided by this extension\n                    const tooltipClass = 'diffTooltip';\n\n                    let diffButton = (\n                      <Tooltip\n                        position=\"left\"\n                        text={\n                          item.revision() == state.post.revisionCount()\n                            ? // we're hovering on latest revision's button\n                              app.translator.trans('the-turk-diff.forum.tooltips.mostRecent')\n                            : item.revision() == 0\n                            ? // we're hovering on zeroth revision's button\n                              app.translator.trans('the-turk-diff.forum.tooltips.originalContent')\n                            : // we're hovering on other revision's button\n                              app.translator.trans('the-turk-diff.forum.tooltips.revisionWithNumber', {\n                                number: item.revision(),\n                              })\n                        }\n                      >\n                        {DiffButton.component({\n                          'data-container': 'body',\n                          postDate: state.post.createdAt(),\n                          subButton: false,\n                          item,\n                          onclick: () => {\n                            if (!item.deletedAt()) {\n                              state.selectedItem = item;\n                              app.modal.show(DiffModal, { listState: state });\n\n                              if (state.forModal) {\n                                // .DiffList-content container of clicked revision\n                                const $listContainer = this.$('li#parentDiff' + item.id());\n\n                                // disable clicked revision, enable others\n                                $listContainer.find('button').prop('disabled', true);\n                                $listContainer.siblings().find('button').prop('disabled', false);\n                                // add 'active' class to clicked revision, remove it from others\n                                $listContainer.siblings().removeClass('active');\n                                $listContainer.addClass('active');\n                              }\n                            } else {\n                              // if revision is deleted, we'll toggle the info\n                              // like GitHub does.\n                              this.toggleSubDiff(item.id());\n                            }\n                          },\n                          oncreate: (vnode) => {\n                            $(vnode.dom)\n                              // this is a workaround for adding custom\n                              // classes into bootstrap tooltips\n                              // https://stackoverflow.com/a/29879041/12866913\n                              .data('bs.tooltip')\n                              .tip()\n                              .addClass(item.deletedAt() ? tooltipClass + ' deletedDiffTooltip' : tooltipClass);\n                          },\n                        })}\n                      </Tooltip>\n                    );\n\n                    // returns the template for revision list items\n                    return [\n                      <li className={'Diff ParentDiff' + (item.deletedAt() ? ' DeletedDiff' : '')} id={'parentDiff' + item.id()}>\n                        {diffButton}\n                      </li>,\n                      item.deletedAt() ? (\n                        <li className=\"Diff SubDiff\" id={'subDiff' + item.id()}>\n                          <DiffButton postDate={state.post.createdAt()} subButton item={item} />\n                        </li>\n                      ) : (\n                        ''\n                      ),\n                    ];\n                  });\n                })\n              : ''}\n            {state.loading ? (\n              LoadingIndicator.component({\n                className: 'LoadingIndicator--block',\n              })\n            ) : !pages.length ? (\n              <div className=\"DiffList-empty\">{app.translator.trans('the-turk-diff.forum.emptyText')}</div>\n            ) : (\n              ''\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n    const state = this.attrs.state;\n\n    if (state.forModal && state.selectedItem) {\n      let $selectedItem = this.$('li#parentDiff' + state.selectedItem);\n      $selectedItem.find('button').prop('disabled', true);\n      $selectedItem.addClass('active');\n    }\n\n    const $revisions = this.$('.DiffList-content');\n    this.$scrollParent = $revisions.css('overflow') === 'auto' ? $revisions : $(window);\n\n    // Lazy-loading implementation for the revision list\n    // simply checks if we're bottom of the list\n    // and if there are more results to show\n    this.scrollHandler = () => {\n      const scrollTop = $scrollParent.scrollTop();\n      const viewportHeight = $scrollParent.height();\n      const contentTop = $scrollParent === $revisions ? 0 : $revisions.offset().top;\n      const contentHeight = $revisions[0].scrollHeight;\n\n      if (state.moreResults && !state.loading && scrollTop + viewportHeight >= contentTop + contentHeight) {\n        state.loadMore();\n      }\n    };\n\n    this.$scrollParent.on('scroll', this.scrollHandler);\n  }\n\n  onremove(vnode) {\n    this.$scrollParent.off('scroll', this.scrollHandler);\n  }\n\n  /**\n   * Toggle the deleted revision's information (sub-button).\n   *\n   * @param {Number} id\n   */\n  toggleSubDiff(id) {\n    const $subDiff = this.$('li.Diff#subDiff' + id);\n    const $parentDiff = this.$('li.Diff#parentDiff' + id);\n    const $icon = $parentDiff.find('.icon');\n\n    $subDiff.toggle();\n\n    // switch caret icon onClick\n    if ($icon.hasClass('fa-caret-down')) {\n      $icon.removeClass('fa-caret-down').addClass('fa-caret-up');\n    } else {\n      $icon.removeClass('fa-caret-up').addClass('fa-caret-down');\n    }\n  }\n}\n","import Dropdown from 'flarum/common/components/Dropdown';\nimport DiffList from './DiffList';\nimport icon from 'flarum/common/helpers/icon';\nimport DiffListState from '../states/DiffListState';\n\n/**\n * The `DiffDropdown` component is the entrance point for this extension.\n * It's the component that you see when you click on \"Edited\" button.\n * It also contains DiffList components.\n */\nexport default class DiffDropdown extends Dropdown {\n  static initAttrs(attrs) {\n    attrs.className = 'DiffDropdown';\n    attrs.buttonClassName = 'Button Button--link';\n    attrs.menuClassName = attrs.menuClassName;\n    attrs.label = app.translator.trans('the-turk-diff.forum.editedText');\n    attrs.icon = 'fas fa-history';\n\n    super.initAttrs(attrs);\n  }\n\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    /**\n     * The post that we're working with.\n     *\n     * @type {Post[]}\n     */\n    this.post = this.attrs.post;\n\n    /**\n     * Create a new revision list.\n     *\n     * @type {DiffListState}\n     */\n    this.listState = new DiffListState(this.post, false, null);\n  }\n\n  getButton() {\n    const vdom = super.getButton();\n\n    vdom.attrs.title = this.attrs.label;\n    vdom.attrs.onclick = this.onclick.bind(this);\n\n    return vdom;\n  }\n\n  getButtonContent() {\n    return [\n      icon(this.attrs.icon, {\n        className: 'Button-icon',\n      }),\n      <span className=\"Button-label\">{this.attrs.label}</span>,\n    ];\n  }\n\n  getMenu() {\n    const revisionCount = this.attrs.post.revisionCount();\n\n    return (\n      <div className={'Dropdown-menu ' + this.attrs.menuClassName}>\n        <div className=\"DiffList-header\">\n          <h4>\n            {/* edited 1 time | edited x times */}\n            {app.translator.trans('the-turk-diff.forum.revisionInfo', { revisionCount })}\n          </h4>\n        </div>\n        {this.showing ? <DiffList state={this.listState}></DiffList> : ''}\n      </div>\n    );\n  }\n\n  /**\n   * Load revision list.\n   */\n  onclick() {\n    this.listState.load();\n  }\n}\n","import app from 'flarum/common/app';\nimport { extend } from 'flarum/common/extend';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport Diff from './models/Diff';\nimport Post from 'flarum/common/models/Post';\nimport Model from 'flarum/common/Model';\nimport DiffDropdown from './components/DiffDropdown';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\n\napp.initializers.add('ianm-diff', () => {\n  app.store.models.diff = Diff;\n  Post.prototype.revisionCount = Model.attribute('revisionCount');\n  Post.prototype.canViewEditHistory = Model.attribute('canViewEditHistory');\n  Post.prototype.canRollbackEditHistory = Model.attribute('canRollbackEditHistory');\n  Post.prototype.canDeleteEditHistory = Model.attribute('canDeleteEditHistory');\n\n  extend(CommentPost.prototype, 'headerItems', function (items) {\n    const post = this.attrs.post;\n\n    // replace \"edited\" text to \"edited\" button\n    if (post.isEdited() && !post.isHidden() && post.canViewEditHistory() && post.revisionCount() > 0) {\n      items.replace('edited', DiffDropdown.component({ post }));\n    }\n\n    // remove diffs cache when post is editing\n    if (this.isEditing() && app.cache.diffs && app.cache.diffs[this.attrs.post.id()]) {\n      delete app.cache.diffs[this.attrs.post.id()];\n    }\n  });\n\n  // prevent dropdown from closing when user\n  // clicks on deleted diff\n  extend(DiscussionPage.prototype, 'oninit', function () {\n    const $body = $('body');\n\n    $body.on('click', 'li.ParentDiff.DeletedDiff', function (e) {\n      e.stopPropagation();\n    });\n\n    $body.on('click', 'li.SubDiff', function (e) {\n      e.stopPropagation();\n    });\n  });\n});\n"],"sourceRoot":""}